{
  "contractName": "AccessControlledAggregator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_paymentAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "_timeout",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_validator",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "_minSubmissionValue",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "_maxSubmissionValue",
          "type": "int256"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "AddedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "int256",
          "name": "current",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "AnswerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AvailableFundsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CheckAccessDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CheckAccessEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "startedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        }
      ],
      "name": "NewRound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "OracleAdminUpdateRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "OracleAdminUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "OraclePermissionsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "RemovedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "delay",
          "type": "uint32"
        }
      ],
      "name": "RequesterPermissionsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "paymentAmount",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "minSubmissionCount",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "maxSubmissionCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "restartDelay",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "timeout",
          "type": "uint32"
        }
      ],
      "name": "RoundDetailsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "int256",
          "name": "submission",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "round",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "SubmissionReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previous",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "name": "ValidatorUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "addAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allocatedFunds",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "availableFunds",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_removed",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_added",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_addedAdmins",
          "type": "address[]"
        },
        {
          "internalType": "uint32",
          "name": "_minSubmissions",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_maxSubmissions",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_restartDelay",
          "type": "uint32"
        }
      ],
      "name": "changeOracles",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "disableAccessCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableAccessCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getOracles",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_calldata",
          "type": "bytes"
        }
      ],
      "name": "hasAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "linkToken",
      "outputs": [
        {
          "internalType": "contract LinkTokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maxSubmissionCount",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maxSubmissionValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minSubmissionCount",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minSubmissionValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_queriedRoundId",
          "type": "uint32"
        }
      ],
      "name": "oracleRoundState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_eligibleToSubmit",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "_roundId",
          "type": "uint32"
        },
        {
          "internalType": "int256",
          "name": "_latestSubmission",
          "type": "int256"
        },
        {
          "internalType": "uint64",
          "name": "_startedAt",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_timeout",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "_availableFunds",
          "type": "uint128"
        },
        {
          "internalType": "uint8",
          "name": "_oracleCount",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "_paymentAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paymentAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestNewRound",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "",
          "type": "uint80"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartDelay",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_requester",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_authorized",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "_delay",
          "type": "uint32"
        }
      ],
      "name": "setRequesterPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newValidator",
          "type": "address"
        }
      ],
      "name": "setValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "_submission",
          "type": "int256"
        }
      ],
      "name": "submit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateAvailableFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_paymentAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "_minSubmissions",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_maxSubmissions",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_restartDelay",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_timeout",
          "type": "uint32"
        }
      ],
      "name": "updateFutureRounds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "contract AggregatorValidatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "withdrawablePayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "latestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_timeout\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_minSubmissionValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_maxSubmissionValue\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AvailableFundsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"OracleAdminUpdateRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"OracleAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"OraclePermissionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RemovedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"RequesterPermissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"paymentAmount\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"minSubmissionCount\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"maxSubmissionCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"restartDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"}],\"name\":\"RoundDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"submission\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"round\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"SubmissionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"ValidatorUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocatedFunds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableFunds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_removed\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_added\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_addedAdmins\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"_minSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"}],\"name\":\"changeOracles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracles\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkToken\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSubmissionCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSubmissionValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSubmissionCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSubmissionValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_queriedRoundId\",\"type\":\"uint32\"}],\"name\":\"oracleRoundState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_eligibleToSubmit\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"_roundId\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"_latestSubmission\",\"type\":\"int256\"},{\"internalType\":\"uint64\",\"name\":\"_startedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_timeout\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"_availableFunds\",\"type\":\"uint128\"},{\"internalType\":\"uint8\",\"name\":\"_oracleCount\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNewRound\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"_delay\",\"type\":\"uint32\"}],\"name\":\"setRequesterPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newValidator\",\"type\":\"address\"}],\"name\":\"setValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_submission\",\"type\":\"int256\"}],\"name\":\"submit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeout\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAvailableFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_minSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_timeout\",\"type\":\"uint32\"}],\"name\":\"updateFutureRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"contract AggregatorValidatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"withdrawablePayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"acceptAdmin(address)\":{\"params\":{\"_oracle\":\"is the address of the oracle whose admin is being transferred\"}},\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addAccess(address)\":{\"params\":{\"_user\":\"The address to add\"}},\"changeOracles(address[],address[],address[],uint32,uint32,uint32)\":{\"params\":{\"_added\":\"is the list of addresses for the new Oracles being added\",\"_addedAdmins\":\"is the admin addresses for the new respective _added list. Only this address is allowed to access the respective oracle's funds\",\"_maxSubmissions\":\"is the new maximum submission count for each round\",\"_minSubmissions\":\"is the new minimum submission count for each round\",\"_removed\":\"is the list of addresses for the new Oracles being removed\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"constructor\":{\"params\":{\"_decimals\":\"represents the number of decimals to offset the answer by\",\"_description\":\"a short description of what is being reported\",\"_link\":\"The address of the LINK token\",\"_maxSubmissionValue\":\"is an immutable check for an upper bound of what submission values are accepted from an oracle\",\"_minSubmissionValue\":\"is an immutable check for a lower bound of what submission values are accepted from an oracle\",\"_paymentAmount\":\"The amount paid of LINK paid to each oracle per submission, in wei (units of 10\\u207b\\u00b9\\u2078 LINK)\",\"_timeout\":\"is the number of seconds after the previous round that are allowed to lapse before allowing an oracle to skip an unfinished round\",\"_validator\":\"is an optional contract address for validating external validation of answers\"}},\"getAdmin(address)\":{\"params\":{\"_oracle\":\"is the address of the oracle whose admin is being queried\"}},\"getAnswer(uint256)\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.\",\"params\":{\"_roundId\":\"the round number to retrieve the answer for\"}},\"getRoundData(uint80)\":{\"details\":\"overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.\",\"params\":{\"_roundId\":\"the round ID to retrieve the round data for\"},\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.\",\"roundId\":\"is the round ID for which data was retrieved\",\"startedAt\":\"is the timestamp when the round was started. This is 0 if the round hasn't been started yet.\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"getTimestamp(uint256)\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.\",\"params\":{\"_roundId\":\"the round number to retrieve the updated timestamp for\"}},\"hasAccess(address,bytes)\":{\"params\":{\"_user\":\"The address to query\"}},\"latestAnswer()\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"latestRound()\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"latestRoundData()\":{\"details\":\"overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.\",\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.\",\"roundId\":\"is the round ID for which data was retrieved\",\"startedAt\":\"is the timestamp when the round was started. This is 0 if the round hasn't been started yet.\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"latestTimestamp()\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"params\":{\"_data\":\"is mostly ignored. It is checked for length, to be sure nothing strange is passed in.\"}},\"oracleRoundState(address,uint32)\":{\"params\":{\"_oracle\":\"the address to look up information for.\"}},\"removeAccess(address)\":{\"params\":{\"_user\":\"The address to remove\"}},\"setRequesterPermissions(address,bool,uint32)\":{\"params\":{\"_authorized\":\"is a boolean specifying whether they can start new rounds or not\",\"_delay\":\"is the number of rounds the requester must wait before starting another round\",\"_requester\":\"is the address to set permissions for\"}},\"setValidator(address)\":{\"params\":{\"_newValidator\":\"designates the address of the new validation contract.\"}},\"submit(uint256,int256)\":{\"params\":{\"_roundId\":\"is the ID of the round this submission pertains to\",\"_submission\":\"is the updated data that the oracle is submitting\"}},\"transferAdmin(address,address)\":{\"params\":{\"_newAdmin\":\"is the new admin address\",\"_oracle\":\"is the address of the oracle whose admin is being transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)\":{\"params\":{\"_maxSubmissions\":\"is the new maximum submission count for each round\",\"_minSubmissions\":\"is the new minimum submission count for each round\",\"_paymentAmount\":\"is the payment amount for subsequent rounds\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"withdrawFunds(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of LINK to send\",\"_recipient\":\"is the address to send the LINK to\"}},\"withdrawPayment(address,address,uint256)\":{\"params\":{\"_amount\":\"is the amount of LINK to send\",\"_oracle\":\"is the oracle whose LINK is transferred\",\"_recipient\":\"is the address to send the LINK to\"}}},\"title\":\"AccessControlled FluxAggregator contract\"},\"userdoc\":{\"methods\":{\"acceptAdmin(address)\":{\"notice\":\"accept the admin address transfer for an oracle\"},\"addAccess(address)\":{\"notice\":\"Adds an address to the access list\"},\"allocatedFunds()\":{\"notice\":\"the amount of payment yet to be withdrawn by oracles\"},\"availableFunds()\":{\"notice\":\"the amount of future funding available to oracles\"},\"changeOracles(address[],address[],address[],uint32,uint32,uint32)\":{\"notice\":\"called by the owner to remove and add new oracles as well as update the round related parameters that pertain to total oracle count\"},\"constructor\":\"set up the aggregator with initial configuration\",\"disableAccessCheck()\":{\"notice\":\"makes the access check unenforced\"},\"enableAccessCheck()\":{\"notice\":\"makes the access check enforced\"},\"getAdmin(address)\":{\"notice\":\"get the admin address of an oracle\"},\"getAnswer(uint256)\":{\"notice\":\"get past rounds answers\"},\"getOracles()\":{\"notice\":\"returns an array of addresses containing the oracles on contract\"},\"getRoundData(uint80)\":{\"notice\":\"get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values.\"},\"getTimestamp(uint256)\":{\"notice\":\"get timestamp when an answer was last updated\"},\"hasAccess(address,bytes)\":{\"notice\":\"Returns the access of an address\"},\"latestAnswer()\":{\"notice\":\"get the most recently reported answer\"},\"latestRound()\":{\"notice\":\"get the most recently reported round ID\"},\"latestRoundData()\":{\"notice\":\"get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Consumers are encouraged to use this more fully featured method over the \\\"legacy\\\" latestAnswer functions. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values.\"},\"latestTimestamp()\":{\"notice\":\"get the most recent updated at timestamp\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"called through LINK's transferAndCall to update available funds in the same transaction as the funds were transferred to the aggregator\"},\"oracleCount()\":{\"notice\":\"returns the number of oracles\"},\"oracleRoundState(address,uint32)\":{\"notice\":\"a method to provide all current info oracles need. Intended only only to be callable by oracles. Not for use by contracts to read state.\"},\"removeAccess(address)\":{\"notice\":\"Removes an address from the access list\"},\"requestNewRound()\":{\"notice\":\"allows non-oracles to request a new round\"},\"setRequesterPermissions(address,bool,uint32)\":{\"notice\":\"allows the owner to specify new non-oracles to start new rounds\"},\"setValidator(address)\":{\"notice\":\"method to update the address which does external data validation.\"},\"submit(uint256,int256)\":{\"notice\":\"called by oracles when they have witnessed a need to update\"},\"transferAdmin(address,address)\":{\"notice\":\"transfer the admin address for an oracle\"},\"updateAvailableFunds()\":{\"notice\":\"recalculate the amount of LINK available for payouts\"},\"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)\":{\"notice\":\"update the round and payment related parameters for subsequent rounds\"},\"withdrawFunds(address,uint256)\":{\"notice\":\"transfers the owner's LINK to another address\"},\"withdrawPayment(address,address,uint256)\":{\"notice\":\"transfers the oracle's LINK to another address. Can only be called by the oracle's admin.\"},\"withdrawablePayment(address)\":{\"notice\":\"query the available amount of LINK for an oracle to withdraw\"}},\"notice\":\"This contract requires addresses to be added to a controller in order to read the answers stored in the FluxAggregator contract\"}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/AccessControlledAggregator.sol\":\"AccessControlledAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/AccessControlledAggregator.sol\":{\"keccak256\":\"0x97077fe4c489d97426eca484c2bafed1ff1b8dc1e42142762f3d7d35144bb353\",\"urls\":[\"bzz-raw://cc7bc33f9a0f28f40eef023afabeb165bd22a9d99f34176bc7e911a9f7da075a\",\"dweb:/ipfs/QmbVw93Axybakb7e2RCWgvAeDDw4mUtFXm2B8XqtC6dByb\"]},\"@chainlink/contracts/src/v0.6/FluxAggregator.sol\":{\"keccak256\":\"0xde4988e0ba7573bd27e9aee10bf3ac62d6b3521032b60bcc8725f51b17826295\",\"urls\":[\"bzz-raw://396b457f8929647cfba2c51de78ebcaf0b7425859d4670fae07f05ed5ade7cd9\",\"dweb:/ipfs/QmXVmtf2w3dyZKVSB9tzJCLDthWUdHXzD6CrMSjyhc4rXx\"]},\"@chainlink/contracts/src/v0.6/Median.sol\":{\"keccak256\":\"0x844b85b7864a30e3c89227419ade06b1e2314f810025c50ad22e7cbe4eb90691\",\"urls\":[\"bzz-raw://b75cfd1cfb09b00b075e5b2123255a54ae0d7a16136496487369e422db182508\",\"dweb:/ipfs/QmdkQTayL83SqSqnnF5azPFt3q3vjbx63NjuuezZyZgDCj\"]},\"@chainlink/contracts/src/v0.6/Owned.sol\":{\"keccak256\":\"0xd791ecc6095e7f3b0a49f036f1fd9011873e5c7c04d2b28292d11e15c0967b75\",\"urls\":[\"bzz-raw://1cc68291e0dc79fb6a140a2f4e667392fe71d0e7814bad3b56ae47dd13f69ba7\",\"dweb:/ipfs/QmQFTFFBjaJsb7sivr25R4XfNKW84nDjZWSGMY7Cc8eqqC\"]},\"@chainlink/contracts/src/v0.6/SafeMath128.sol\":{\"keccak256\":\"0x9253d0e9721a1a9415bb35fc4b44ac8e59515dca86c877661735b390719e01fd\",\"urls\":[\"bzz-raw://2b3ddaa2ad32ae2de76b79a2f8dc0255490ebe7bd2b61aa6c3467276e22a3146\",\"dweb:/ipfs/QmY9XSZsB9fQSwhpPhgdyVrHUPoa6UUdbcVzhg92W5hiPc\"]},\"@chainlink/contracts/src/v0.6/SafeMath32.sol\":{\"keccak256\":\"0xd688bc13cc627233e51c3979879a68031aacebb7d28ba30360bb330e2ffb42d7\",\"urls\":[\"bzz-raw://91399d23717cbc7b2fb2e2c8da8d517e071a1bebfa57126bab497a62c6f82bbf\",\"dweb:/ipfs/QmZ4FLPpUqcuhnMQijgQnb7quzL5i5dsEMoGNQuC2PcCfA\"]},\"@chainlink/contracts/src/v0.6/SafeMath64.sol\":{\"keccak256\":\"0xaa9087ecb13ee356bd213152cd41e6a5e6aa9c3b2c9a5fec2ca5591cf5d715d6\",\"urls\":[\"bzz-raw://0b01286f4619dd7038dc2c2da984be991777fed44ad9bef2641ec58649b097e8\",\"dweb:/ipfs/QmZhU1uQjKNnjuZ4MscHRJmM8zMG9eTNepjwdg8we4JQiC\"]},\"@chainlink/contracts/src/v0.6/SignedSafeMath.sol\":{\"keccak256\":\"0x1a4f6b94292a5cfb16e5eb56a4c0a4395c1c10353452bd54d15fe4526506d336\",\"urls\":[\"bzz-raw://43457ed7b7207ec1f50e00127809769f109bb1ab91b84a5dbc3a19685170b634\",\"dweb:/ipfs/QmQBvs8PHAdU4tyrzZfkhJ8EDA1aLJbMWRu6VrKPrBfeFj\"]},\"@chainlink/contracts/src/v0.6/SimpleReadAccessController.sol\":{\"keccak256\":\"0xac369a002088e3934f3bf74545ccc28d79b05b05fe2ac6f76c963b5707d8bfcb\",\"urls\":[\"bzz-raw://010491b2188a7dd11045993caf6c0c28529f36ca1fabf1f2a0fe22669b0fc5d4\",\"dweb:/ipfs/QmRyBFRsdFehSUbjqUZHvxgMLwWfL28w7H3sbQqcw86jWU\"]},\"@chainlink/contracts/src/v0.6/SimpleWriteAccessController.sol\":{\"keccak256\":\"0x4c5394385cd47efc170a5605f1e13fbcaddd8764f17b75195c18235d2dadf8b1\",\"urls\":[\"bzz-raw://767e097b31d368be8f522297aacd336d9afe130827d97cb944f6a3fbedbbda53\",\"dweb:/ipfs/QmWAWdsSWcdTndRme1GGfNsVzGEhSBSi3dFMUP7DjwNSTc\"]},\"@chainlink/contracts/src/v0.6/interfaces/AccessControllerInterface.sol\":{\"keccak256\":\"0x67b8142df434bec7c794762cccf6576c74b0d0f52bc24a17e05d31022010f267\",\"urls\":[\"bzz-raw://8e43ce1eefefdd7e2d9de3368384c6eb64bf98577b8e5958e9f092dcbfa0d680\",\"dweb:/ipfs/QmW3Nd3AUa146oC1UJJoy99nxGioHQCwE4D3pdy4deq9uR\"]},\"@chainlink/contracts/src/v0.6/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0xbd2b9524ed06f150fefaf4ea600fa8b426d644f17c9f7ddd6d793c19557c23ca\",\"urls\":[\"bzz-raw://32e224693884f94929ab3128a1f780c517c8c294634f7f0ef56b411131fa9858\",\"dweb:/ipfs/QmYC99ZwJoPRSmBGV69uwQwdotVcGYC2AMUjLnS48PYiXq\"]},\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xb2e32f1292bd9c3bc2f4823ae6457bb81a6497138a9bf454c46dae73553097d4\",\"urls\":[\"bzz-raw://7c43cffc680e119f38fa16950d57c29705f6351522fa0a2f3ac20cc0bfa5416c\",\"dweb:/ipfs/QmZtPBiuFkZfoCSx2M98HHbmCSY12VFHKZdtwFN1K1R5qD\"]},\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x1862840d741dedb36e774534b877a13b5187555e3b78b8d2815f898b0dc02268\",\"urls\":[\"bzz-raw://64a15f4349aea6e60703f581a6280b71d6adb35ee74d2f3c4f130a2adc3efee3\",\"dweb:/ipfs/QmdVoSQvGfJNPnjQsAs7ZN3ueWghzTa72jSqzhGiQNDpkL\"]},\"@chainlink/contracts/src/v0.6/interfaces/AggregatorValidatorInterface.sol\":{\"keccak256\":\"0x9403d756c0e628ea0886db03668ec0a9a9b8cb8c781a57da68d05fb5f1faf976\",\"urls\":[\"bzz-raw://3cfe28f8e87ffb4c730e528874eb4af5925a9ea3ca5eeb412b8904be350e461e\",\"dweb:/ipfs/QmcMYd8AM5BtRTaFDJptWaNmNB6Uk9yVEx4z4AFrvZs2KT\"]},\"@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xe245a7be950c94d87bb775ae9ee9fbd693fbe2987778e6ce0b04605ea44b7b68\",\"urls\":[\"bzz-raw://bd2c3165d949fc66fe407b96eb3dc2092c7e800f4c073b411bf7b96de3e156c9\",\"dweb:/ipfs/QmcfJhR1Np4GsLWnww2Duqks2wEzYk8VDTvCAYy7MisG1r\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620053523803806200535283398181016040526101008110156200003857600080fd5b815160208301516040808501516060860151608087015160a088015160c089015160e08a0180519651989a9799959894979396929591949391820192846401000000008211156200008857600080fd5b9083019060208201858111156200009e57600080fd5b8251640100000000811182820188101715620000b957600080fd5b82525081516020918201929091019080838360005b83811015620000e8578181015183820152602001620000ce565b50505050905090810190601f168015620001165780820380516001836020036101000a031916815260200191505b50604052505060008054336001600160a01b0319918216178255600280549091166001600160a01b038c1617905589915088908890889088908890889088906200016590889080808a62000244565b62000179856001600160e01b036200062216565b608084905260a08390526005805460ff191660ff84161790558051620001a790600690602084019062000806565b50620001c88663ffffffff1642620006ec60201b620034db1790919060201c565b6000805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6c80546001600160401b03929092166801000000000000000002600160401b600160801b03199092169190911790555050600e805460ff1916600117905550620008a89c50505050505050505050505050565b6000546001600160a01b03163314620002a4576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b6000620002b96001600160e01b036200074f16565b60ff1690508463ffffffff168463ffffffff16101562000320576040805162461bcd60e51b815260206004820152601960248201527f6d6178206d75737420657175616c2f657863656564206d696e00000000000000604482015290519081900360640190fd5b8363ffffffff168163ffffffff16101562000382576040805162461bcd60e51b815260206004820152601760248201527f6d61782063616e6e6f742065786365656420746f74616c000000000000000000604482015290519081900360640190fd5b63ffffffff81161580620003a157508263ffffffff168163ffffffff16115b620003f3576040805162461bcd60e51b815260206004820152601960248201527f64656c61792063616e6e6f742065786365656420746f74616c00000000000000604482015290519081900360640190fd5b620004106001600160801b0387166001600160e01b036200075616565b600d546001600160801b0316101562000470576040805162461bcd60e51b815260206004820152601e60248201527f696e73756666696369656e742066756e647320666f72207061796d656e740000604482015290519081900360640190fd5b6000620004856001600160e01b036200074f16565b60ff161115620004eb5760008563ffffffff1611620004eb576040805162461bcd60e51b815260206004820152601a60248201527f6d696e206d7573742062652067726561746572207468616e2030000000000000604482015290519081900360640190fd5b85600460006101000a8154816001600160801b0302191690836001600160801b0316021790555084600460146101000a81548163ffffffff021916908363ffffffff16021790555083600460106101000a81548163ffffffff021916908363ffffffff16021790555082600460186101000a81548163ffffffff021916908363ffffffff160217905550816004601c6101000a81548163ffffffff021916908363ffffffff1602179055508363ffffffff168563ffffffff16600460009054906101000a90046001600160801b03166001600160801b03167f56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f8686604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a4505050505050565b6000546001600160a01b0316331462000682576040805162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b6003546001600160a01b039081169082168114620006e857600380546001600160a01b0319166001600160a01b0384811691821790925560405190918316907fcfac5dc75b8d9a7e074162f59d9adcd33da59f0fe8dfb21580db298fc0fdad0d90600090a35b5050565b60008282111562000744576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b600c545b90565b60006200074960026200078d620007756001600160e01b036200074f16565b60ff1685620007a160201b62003f6a1790919060201c565b620007a160201b62003f6a1790919060201c565b600082620007b25750600062000749565b82820282848281620007c057fe5b0414620007ff5760405162461bcd60e51b8152600401808060200182810382526021815260200180620053316021913960400191505060405180910390fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200084957805160ff191683800117855562000879565b8280016001018555821562000879579182015b82811115620008795782518255916020019190600101906200085c565b50620008879291506200088b565b5090565b6200075391905b8082111562000887576000815560010162000892565b60805160a051614a5b620008d660003980610c805280610f04525080610c0b5280611c045250614a5b6000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806370dea79a11610167578063a4c0ed36116100ce578063d4cc54e411610087578063d4cc54e414610a25578063dc7f012414610a2d578063e2e4031714610a35578063e9ee6eeb14610a5b578063f2fde38b14610a89578063feaf968c14610aaf57610295565b8063a4c0ed361461092c578063b5ab58dc146109af578063b633620c146109cc578063c1075329146109e9578063c35905c614610a15578063c937450014610a1d57610295565b80638823da6c116101205780638823da6c146107b757806388aa80e7146107dd5780638da5cb5b1461086f57806398e5b12a146108775780639a6fc8f51461089e578063a118f2491461090657610295565b806370dea79a146107125780637284e4161461071a57806379ba5097146107975780637c2b0b211461079f5780638038e4a1146107a75780638205bf6a146107af57610295565b806340884c521161020b57806358609e44116101c457806358609e44146105e6578063613d8fcc146105ee578063628806ef146105f657806364efb22b1461061c578063668a0f02146106425780636b14daf81461064a57610295565b806340884c521461054a57806346fcff4c146105a25780634f8fc3b5146105c657806350d25bcd146105ce57806354fd4d50146105d657806357970e93146105de57610295565b8063313ce5671161025d578063313ce56714610341578063357ebb021461035f57806338aa4c72146103805780633969c20f146103ca5780633a5381b5146104f05780633d3d77141461051457610295565b80630a7569831461029a5780631327d3d8146102a4578063202ee0ed146102ca57806320ed0275146102ed57806323ca290314610327575b600080fd5b6102a2610ab7565b005b6102a2600480360360208110156102ba57600080fd5b50356001600160a01b0316610b45565b6102a2600480360360408110156102e057600080fd5b5080359060200135610bfb565b6102a26004803603606081101561030357600080fd5b5080356001600160a01b03169060208101351515906040013563ffffffff16610dcd565b61032f610f02565b60408051918252519081900360200190f35b610349610f26565b6040805160ff9092168252519081900360200190f35b610367610f2f565b6040805163ffffffff9092168252519081900360200190f35b6102a2600480360360a081101561039657600080fd5b506001600160801b038135169063ffffffff6020820135811691604081013582169160608201358116916080013516610f42565b6102a2600480360360c08110156103e057600080fd5b810190602081018135600160201b8111156103fa57600080fd5b82018360208201111561040c57600080fd5b803590602001918460208302840111600160201b8311171561042d57600080fd5b919390929091602081019035600160201b81111561044a57600080fd5b82018360208201111561045c57600080fd5b803590602001918460208302840111600160201b8311171561047d57600080fd5b919390929091602081019035600160201b81111561049a57600080fd5b8201836020820111156104ac57600080fd5b803590602001918460208302840111600160201b831117156104cd57600080fd5b919350915063ffffffff81358116916020810135821691604090910135166112e5565b6104f86114ad565b604080516001600160a01b039092168252519081900360200190f35b6102a26004803603606081101561052a57600080fd5b506001600160a01b038135811691602081013590911690604001356114bc565b6105526116af565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561058e578181015183820152602001610576565b505050509050019250505060405180910390f35b6105aa611712565b604080516001600160801b039092168252519081900360200190f35b6102a2611721565b61032f611838565b61032f6118c5565b6104f86118ca565b6103676118d9565b6103496118ec565b6102a26004803603602081101561060c57600080fd5b50356001600160a01b03166118f2565b6104f86004803603602081101561063257600080fd5b50356001600160a01b03166119d8565b61032f611a02565b6106fe6004803603604081101561066057600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561068a57600080fd5b82018360208201111561069c57600080fd5b803590602001918460018302840111600160201b831117156106bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a8a945050505050565b604080519115158252519081900360200190f35b610367611ab2565b610722611ac5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561075c578181015183820152602001610744565b50505050905090810190601f1680156107895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a2611b53565b61032f611c02565b6102a2611c26565b61032f611cb5565b6102a2600480360360208110156107cd57600080fd5b50356001600160a01b0316611d3d565b61080f600480360360408110156107f357600080fd5b5080356001600160a01b0316906020013563ffffffff16611e04565b60408051981515895263ffffffff9097166020890152878701959095526001600160401b0393841660608801529190921660808601526001600160801b0391821660a086015260ff1660c08501521660e083015251908190036101000190f35b6104f8611f64565b61087f611f73565b6040805169ffffffffffffffffffff9092168252519081900360200190f35b6108c7600480360360208110156108b457600080fd5b503569ffffffffffffffffffff16612092565b6040805169ffffffffffffffffffff96871681526020810195909552848101939093526060840191909152909216608082015290519081900360a00190f35b6102a26004803603602081101561091c57600080fd5b50356001600160a01b0316612133565b6102a26004803603606081101561094257600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561097157600080fd5b82018360208201111561098357600080fd5b803590602001918460018302840111600160201b831117156109a457600080fd5b5090925090506121fb565b61032f600480360360208110156109c557600080fd5b503561225c565b61032f600480360360208110156109e257600080fd5b50356122e5565b6102a2600480360360408110156109ff57600080fd5b506001600160a01b03813516906020013561236e565b6105aa612510565b61036761251f565b6105aa612532565b6106fe612548565b61032f60048036036020811015610a4b57600080fd5b50356001600160a01b0316612551565b6102a260048036036040811015610a7157600080fd5b506001600160a01b0381358116916020013516612575565b6102a260048036036020811015610a9f57600080fd5b50356001600160a01b0316612658565b6108c76126f6565b6000546001600160a01b03163314610b04576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600e5460ff1615610b4357600e805460ff191690556040517f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963890600090a15b565b6000546001600160a01b03163314610b92576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6003546001600160a01b039081169082168114610bf757600380546001600160a01b0319166001600160a01b0384811691821790925560405190918316907fcfac5dc75b8d9a7e074162f59d9adcd33da59f0fe8dfb21580db298fc0fdad0d90600090a35b5050565b6060610c073384612795565b90507f0000000000000000000000000000000000000000000000000000000000000000821215610c7e576040805162461bcd60e51b815260206004820152601e60248201527f76616c75652062656c6f77206d696e5375626d697373696f6e56616c75650000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000821315610cf3576040805162461bcd60e51b815260206004820152601e60248201527f76616c75652061626f7665206d61785375626d697373696f6e56616c75650000604482015290519081900360640190fd5b8051819015610d805760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d45578181015183820152602001610d2d565b50505050905090810190601f168015610d725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610d8a83612a37565b610d948284612acc565b600080610da085612ba5565b91509150610dad85612cfd565b610db685612e40565b8115610dc657610dc68582612e9f565b5050505050565b6000546001600160a01b03163314610e1a576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6001600160a01b0383166000908152600b602052604090205460ff1615158215151415610e4657610efd565b8115610e89576001600160a01b0383166000908152600b60205260409020805460ff19168315151764ffffffff00191661010063ffffffff841602179055610eb2565b6001600160a01b0383166000908152600b60205260409020805468ffffffffffffffffff191690555b60408051831515815263ffffffff8316602082015281516001600160a01b038616927fc3df5a754e002718f2e10804b99e6605e7c701d95cec9552c7680ca2b6f2820a928290030190a25b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1681565b600454600160c01b900463ffffffff1681565b6000546001600160a01b03163314610f8f576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6000610f996118ec565b60ff1690508463ffffffff168463ffffffff161015610fff576040805162461bcd60e51b815260206004820152601960248201527f6d6178206d75737420657175616c2f657863656564206d696e00000000000000604482015290519081900360640190fd5b8363ffffffff168163ffffffff161015611060576040805162461bcd60e51b815260206004820152601760248201527f6d61782063616e6e6f742065786365656420746f74616c000000000000000000604482015290519081900360640190fd5b63ffffffff8116158061107e57508263ffffffff168163ffffffff16115b6110cf576040805162461bcd60e51b815260206004820152601960248201527f64656c61792063616e6e6f742065786365656420746f74616c00000000000000604482015290519081900360640190fd5b6110e1866001600160801b0316612f98565b600d546001600160801b03161015611140576040805162461bcd60e51b815260206004820152601e60248201527f696e73756666696369656e742066756e647320666f72207061796d656e740000604482015290519081900360640190fd5b600061114a6118ec565b60ff1611156111ae5760008563ffffffff16116111ae576040805162461bcd60e51b815260206004820152601a60248201527f6d696e206d7573742062652067726561746572207468616e2030000000000000604482015290519081900360640190fd5b85600460006101000a8154816001600160801b0302191690836001600160801b0316021790555084600460146101000a81548163ffffffff021916908363ffffffff16021790555083600460106101000a81548163ffffffff021916908363ffffffff16021790555082600460186101000a81548163ffffffff021916908363ffffffff160217905550816004601c6101000a81548163ffffffff021916908363ffffffff1602179055508363ffffffff168563ffffffff16600460009054906101000a90046001600160801b03166001600160801b03167f56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f8686604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a4505050505050565b6000546001600160a01b03163314611332576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b60005b88811015611369576113618a8a8381811061134c57fe5b905060200201356001600160a01b0316612fc6565b600101611335565b508584146113be576040805162461bcd60e51b815260206004820181905260248201527f6e6565642073616d65206f7261636c6520616e642061646d696e20636f756e74604482015290519081900360640190fd5b604d6113db876113cc6118ec565b60ff169063ffffffff61319416565b1115611424576040805162461bcd60e51b81526020600482015260136024820152721b585e081bdc9858db195cc8185b1b1bddd959606a1b604482015290519081900360640190fd5b60005b868110156114775761146f88888381811061143e57fe5b905060200201356001600160a01b031687878481811061145a57fe5b905060200201356001600160a01b03166131dc565b600101611427565b506004546114a2906001600160801b03811690859085908590600160e01b900463ffffffff16610f42565b505050505050505050565b6003546001600160a01b031681565b6001600160a01b0383811660009081526008602052604090206002015462010000900416331461152c576040805162461bcd60e51b815260206004820152601660248201527537b7363c9031b0b63630b1363290313c9030b236b4b760511b604482015290519081900360640190fd5b6001600160a01b03831660009081526008602052604090205481906001600160801b039081169082168110156115a9576040805162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e7420776974686472617761626c652066756e647300604482015290519081900360640190fd5b6115c26001600160801b0382168363ffffffff61346c16565b6001600160a01b038616600090815260086020526040902080546001600160801b0319166001600160801b03928316179055600d5461160a91600160801b909104168361346c565b600d80546001600160801b03928316600160801b029083161790556002546040805163a9059cbb60e01b81526001600160a01b03888116600483015293861660248201529051929091169163a9059cbb916044808201926020929091908290030181600087803b15801561167d57600080fd5b505af1158015611691573d6000803e3d6000fd5b505050506040513d60208110156116a757600080fd5b5051610dc657fe5b6060600c80548060200260200160405190810160405280929190818152602001828054801561170757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116e9575b505050505090505b90565b600d546001600160801b031690565b6117296148b4565b50604080518082018252600d546001600160801b038082168352600160801b90910416602080830182905260025484516370a0823160e01b8152306004820152945193946000946117da94936001600160a01b03909316926370a082319260248082019391829003018186803b1580156117a257600080fd5b505afa1580156117b6573d6000803e3d6000fd5b505050506040513d60208110156117cc57600080fd5b50519063ffffffff6134db16565b82519091506001600160801b03168114610bf757600d80546001600160801b0319166001600160801b03831617905560405181907ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f90600090a25050565b600061187b336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b6118b8576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b6118c0613532565b905090565b600381565b6002546001600160a01b031681565b600454600160801b900463ffffffff1681565b600c5490565b6001600160a01b03818116600090815260086020526040902060030154163314611963576040805162461bcd60e51b815260206004820152601e60248201527f6f6e6c792063616c6c61626c652062792070656e64696e672061646d696e0000604482015290519081900360640190fd5b6001600160a01b0381166000818152600860205260408082206003810180546001600160a01b0319169055600201805462010000600160b01b031916336201000081029190911790915590519092917f0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe90491a350565b6001600160a01b03808216600090815260086020526040902060020154620100009004165b919050565b6000611a45336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b611a82576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b6118c0613554565b6000611a968383613567565b80611aa957506001600160a01b03831632145b90505b92915050565b600454600160e01b900463ffffffff1681565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611b4b5780601f10611b2057610100808354040283529160200191611b4b565b820191906000526020600020905b815481529060010190602001808311611b2e57829003601f168201915b505050505081565b6001546001600160a01b03163314611bab576040805162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b604482015290519081900360640190fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314611c73576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600e5460ff16610b4357600e805460ff191660011790556040517faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348090600090a1565b6000611cf8336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b611d35576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b6118c0613597565b6000546001600160a01b03163314611d8a576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6001600160a01b0381166000908152600f602052604090205460ff1615611e01576001600160a01b0381166000818152600f6020908152604091829020805460ff19169055815192835290517f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d19281900390910190a15b50565b600080808080808080333214611e5a576040805162461bcd60e51b81526020600482015260166024820152756f66662d636861696e2072656164696e67206f6e6c7960501b604482015290519081900360640190fd5b63ffffffff891615611f3d5763ffffffff89166000908152600960209081526040808320600a909252909120611e908c8c6135cc565b6001600160a01b038d1660009081526008602052604090206001908101548482015491840154600d548f936001600160401b031691600160401b900463ffffffff16906001600160801b0316611ee46118ec565b60018901546001600160401b0316611f07576004546001600160801b0316611f1d565b6001880154600160601b90046001600160801b03165b8363ffffffff169350995099509950995099509950995099505050611f57565b611f468a613621565b975097509750975097509750975097505b9295985092959890939650565b6000546001600160a01b031681565b336000908152600b602052604081205460ff16611fd7576040805162461bcd60e51b815260206004820152601860248201527f6e6f7420617574686f72697a6564207265717565737465720000000000000000604482015290519081900360640190fd5b60075463ffffffff16600081815260096020526040902060010154600160401b90046001600160401b03161515806120135750612013816137ec565b612064576040805162461bcd60e51b815260206004820152601f60248201527f7072657620726f756e64206d75737420626520737570657273656461626c6500604482015290519081900360640190fd5b600061207b63ffffffff8084169060019061387716565b9050612086816138c8565b63ffffffff1691505090565b60008060008060006120db336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b612118576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b61212186613996565b939a9299509097509550909350915050565b6000546001600160a01b03163314612180576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6001600160a01b0381166000908152600f602052604090205460ff16611e01576001600160a01b0381166000818152600f6020908152604091829020805460ff19166001179055815192835290517f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49281900390910190a150565b801561224e576040805162461bcd60e51b815260206004820181905260248201527f7472616e7366657220646f65736e2774206163636570742063616c6c64617461604482015290519081900360640190fd5b612256611721565b50505050565b600061229f336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b6122dc576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b611aac82613ad0565b6000612328336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b612365576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b611aac82613b04565b6000546001600160a01b031633146123bb576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600d546004546001600160801b039182169183916123ea916123dd9116612f98565b839063ffffffff6134db16565b101561243d576040805162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e7420726573657276652066756e6473000000000000604482015290519081900360640190fd5b6002546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561249357600080fd5b505af11580156124a7573d6000803e3d6000fd5b505050506040513d60208110156124bd57600080fd5b5051612508576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b610efd611721565b6004546001600160801b031681565b600454600160a01b900463ffffffff1681565b600d54600160801b90046001600160801b031690565b600e5460ff1681565b6001600160a01b03166000908152600860205260409020546001600160801b031690565b6001600160a01b038281166000908152600860205260409020600201546201000090041633146125e5576040805162461bcd60e51b815260206004820152601660248201527537b7363c9031b0b63630b1363290313c9030b236b4b760511b604482015290519081900360640190fd5b6001600160a01b0382811660008181526008602090815260409182902060030180546001600160a01b0319169486169485179055815133815290810193909352805191927fb79bf2e89c2d70dde91d2991fb1ea69b7e478061ad7c04ed5b02b96bc52b8104929081900390910190a25050565b6000546001600160a01b031633146126a5576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600080600080600061273f336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b61277c576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b612784613b43565b945094509450945094509091929394565b6001600160a01b03821660009081526008602052604090205460075460609163ffffffff600160801b90910481169116816127fe57604051806040016040528060128152602001716e6f7420656e61626c6564206f7261636c6560701b81525092505050611aac565b8363ffffffff168263ffffffff16111561284a57604051806040016040528060168152602001756e6f742079657420656e61626c6564206f7261636c6560501b81525092505050611aac565b6001600160a01b03851660009081526008602052604090205463ffffffff808616600160a01b9092041610156128b9576040518060400160405280601881526020017f6e6f206c6f6e67657220616c6c6f776564206f7261636c65000000000000000081525092505050611aac565b6001600160a01b03851660009081526008602052604090205463ffffffff808616600160c01b9092041610612927576040518060400160405280602081526020017f63616e6e6f74207265706f7274206f6e2070726576696f757320726f756e647381525092505050611aac565b8063ffffffff168463ffffffff1614158015612963575061295363ffffffff8083169060019061387716565b63ffffffff168463ffffffff1614155b801561297657506129748482613b6c565b155b156129ba576040518060400160405280601781526020017f696e76616c696420726f756e6420746f207265706f727400000000000000000081525092505050611aac565b8363ffffffff166001141580156129eb57506129e96129e463ffffffff80871690600190613bcc16565b613c2f565b155b15612a2f576040518060400160405280601f81526020017f70726576696f757320726f756e64206e6f7420737570657273656461626c650081525092505050611aac565b505092915050565b612a4081613c69565b612a4957611e01565b3360009081526008602052604090205460045463ffffffff600160e01b909204821691600160c01b9091048116820190831611801590612a8857508015155b15612a935750611e01565b612a9c82613c9a565b50336000908152600860205260409020805463ffffffff8316600160e01b026001600160e01b0390911617905550565b612ad581613e4d565b612b26576040805162461bcd60e51b815260206004820152601f60248201527f726f756e64206e6f7420616363657074696e67207375626d697373696f6e7300604482015290519081900360640190fd5b63ffffffff81166000818152600a6020908152604080832080546001808201835591855283852001879055338085526008909352818420805463ffffffff60c01b1916600160c01b8702178155018690555190929185917f92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c9190a45050565b63ffffffff8082166000908152600a602052604081206001810154905491928392600160201b909204161115612be057506000905080612cf8565b63ffffffff83166000908152600a602090815260408083208054825181850281018501909352808352612c4693830182828015612c3c57602002820191906000526020600020905b815481526020019060010190808311612c28575b5050505050613e6d565b63ffffffff8516600081815260096020908152604091829020848155600101805467ffffffffffffffff60401b1916600160401b426001600160401b038116919091029190911763ffffffff60801b1916600160801b8602179091556007805467ffffffff000000001916600160201b860217905582519081529151939450919284927f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f928290030190a36001925090505b915091565b63ffffffff81166000908152600a6020526040902060010154600160601b90046001600160801b0316612d2e6148b4565b5060408051808201909152600d546001600160801b03808216808452600160801b909204166020830152612d68908363ffffffff61346c16565b6001600160801b0390811682526020820151612d8b91168363ffffffff613f1616565b6001600160801b0390811660208084018290528351600d8054600160801b9094029185166001600160801b03199094169390931784161790915533600090815260089091526040902054612de691168363ffffffff613f1616565b3360009081526008602052604080822080546001600160801b0319166001600160801b03948516179055835190519216917ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f9190a2505050565b63ffffffff8082166000908152600a602052604090206001810154905491161115612e6a57611e01565b63ffffffff81166000908152600a6020526040812090612e8a82826148cb565b5060010180546001600160e01b031916905550565b6003546001600160a01b031680612eb65750610bf7565b6000612ecd63ffffffff80861690600190613bcc16565b63ffffffff808216600090815260096020908152604080832060018101549054825163beed9b5160e01b8152600160801b90920486166004830181905260248301829052958b166044830152606482018a90529151959650939490936001600160a01b0388169363beed9b5193620186a093608480850194929391928390030190829088803b158015612f5f57600080fd5b5087f193505050508015612f8557506040513d6020811015612f8057600080fd5b505160015b612f8e57612f90565b505b505050505050565b6000611aac6002612fba612faa6118ec565b859060ff1663ffffffff613f6a16565b9063ffffffff613f6a16565b612fcf81613fc3565b613015576040805162461bcd60e51b81526020600482015260126024820152711bdc9858db19481b9bdd08195b98589b195960721b604482015290519081900360640190fd5b60075461302e9063ffffffff9081169060019061387716565b6001600160a01b0382166000908152600860205260408120805463ffffffff93909316600160a01b0263ffffffff60a01b1990931692909217909155600c61308860016130796118ec565b60ff169063ffffffff6134db16565b8154811061309257fe5b6000918252602080832091909101546001600160a01b0385811680855260089093526040808520600290810180549390941680875291862001805461ffff90931661ffff199384168117909155939094528154169055600c80549293509091839190839081106130fe57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600c80548061313757fe5b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038516907f18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e908390a3505050565b600082820183811015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b6131e582613fc3565b15613230576040805162461bcd60e51b81526020600482015260166024820152751bdc9858db1948185b1c9958591e48195b98589b195960521b604482015290519081900360640190fd5b6001600160a01b038116613283576040805162461bcd60e51b8152602060048201526015602482015274063616e6e6f74207365742061646d696e20746f203605c1b604482015290519081900360640190fd5b6001600160a01b038281166000908152600860205260409020600201546201000090041615806132d857506001600160a01b038281166000908152600860205260409020600201546201000090048116908216145b613329576040805162461bcd60e51b815260206004820152601c60248201527f6f776e65722063616e6e6f74206f76657277726974652061646d696e00000000604482015290519081900360640190fd5b61333282613fee565b6001600160a01b03808416600081815260086020526040808220805463ffffffff60a01b1963ffffffff97909716600160801b0263ffffffff60801b19909116179590951663ffffffff60a01b178555600c80546002909601805461ffff90971661ffff19909716969096178655805460018181019092557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b031916851790558383528554948716620100000262010000600160b01b0319909516949094179094559251919290917f18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e9190a3806001600160a01b0316826001600160a01b03167f0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe90460405160405180910390a35050565b6000826001600160801b0316826001600160801b031611156134d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828211156134d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b600754600160201b900463ffffffff1660009081526009602052604090205490565b600754600160201b900463ffffffff1690565b6001600160a01b0382166000908152600f602052604081205460ff1680611aa9575050600e5460ff161592915050565b600754600160201b900463ffffffff16600090815260096020526040902060010154600160401b90046001600160401b031690565b63ffffffff81166000908152600960205260408120600101546001600160401b031615613617576135fc82613e4d565b8015613610575061360d8383612795565b51155b9050611aac565b6135fc8383614058565b6001600160a01b0381166000908152600860205260408120600754815483928392839283928392839283927fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b929091849163ffffffff908116600160c01b90920416148061369e575060075461369c9063ffffffff16613e4d565b155b6007549091506136b39063ffffffff16613c2f565b80156136bc5750805b15613715576007546136da9063ffffffff9081169060019061387716565b63ffffffff81166000908152600960205260409020600454919b506001600160801b039091169450925061370e8c8b614058565b9a5061375f565b60075463ffffffff166000818152600960209081526040808320600a90925290912060010154919b50600160601b9091046001600160801b03169450925061375c8a613e4d565b9a505b6137698c8b612795565b51156137745760009a505b6001808301548482015463ffffffff808e166000908152600a6020526040902090930154600d548f948f94936001600160401b031692600160401b900416906001600160801b03166137c46118ec565b8a8363ffffffff1693509a509a509a509a509a509a509a509a50505050919395975091939597565b63ffffffff8082166000908152600960209081526040808320600190810154600a909352908320015491926001600160401b0390911691600160401b9004168115801590613840575060008163ffffffff16115b801561386f5750426138646001600160401b03841663ffffffff808516906140a216565b6001600160401b0316105b949350505050565b600082820163ffffffff8085169082161015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b6138d181613c69565b6138da57611e01565b336000908152600b602052604090205463ffffffff6501000000000082048116916101009004811682019083161180613911575080155b613958576040805162461bcd60e51b81526020600482015260136024820152726d7573742064656c617920726571756573747360681b604482015290519081900360640190fd5b61396182613c9a565b50336000908152600b60205260409020805463ffffffff8316650100000000000268ffffffff00000000001990911617905550565b60008060008060006139a66148e9565b5063ffffffff8087166000908152600960209081526040918290208251608081018452815481526001909101546001600160401b0380821693830193909352600160401b810490921692810192909252600160801b90049091166060820181905215801590613a255750613a258769ffffffffffffffffffff166140f6565b6040518060400160405280600f81526020016e139bc819185d18481c1c995cd95b9d608a1b81525090613a995760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d45578181015183820152602001610d2d565b50805160208201516040830151606090930151989991986001600160401b0391821698509216955063ffffffff9091169350915050565b6000613adb826140f6565b15613afc575063ffffffff81166000908152600960205260409020546119fd565b506000919050565b6000613b0f826140f6565b15613afc575063ffffffff8116600090815260096020526040902060010154600160401b90046001600160401b03166119fd565b6000806000806000612784600760049054906101000a900463ffffffff1663ffffffff16612092565b60008163ffffffff16613b8f60018563ffffffff1661387790919063ffffffff16565b63ffffffff16148015611aa957505063ffffffff16600090815260096020526040902060010154600160401b90046001600160401b031615919050565b60008263ffffffff168263ffffffff1611156134d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b63ffffffff8116600090815260096020526040812060010154600160401b90046001600160401b0316151580611aac5750611aac826137ec565b600754600090613c859063ffffffff9081169060019061387716565b63ffffffff168263ffffffff16149050919050565b613cb7613cb263ffffffff80841690600190613bcc16565b614100565b6007805463ffffffff191663ffffffff8316179055613cd4614910565b5060408051600060a0820181815260c083018452825260045463ffffffff600160801b82048116602080860191909152600160a01b8304821685870152600160e01b8304821660608601526001600160801b03909216608085015285168252600a81529290208151805192938493613d4f928492019061493e565b5060208281015160019283018054604080870151606088015160809098015163ffffffff1990931663ffffffff9586161767ffffffff000000001916600160201b91861691909102176bffffffff00000000000000001916600160401b97851697909702969096176fffffffffffffffffffffffffffffffff60601b1916600160601b6001600160801b03909216919091021790558516600081815260098352849020909201805467ffffffffffffffff1916426001600160401b039081169190911791829055845191168152925133937f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac6027192908290030190a35050565b63ffffffff9081166000908152600a602052604090206001015416151590565b60008151600010613ebe576040805162461bcd60e51b81526020600482015260166024820152756c697374206d757374206e6f7420626520656d70747960501b604482015290519081900360640190fd5b81516002810460018216613efd57600080613ee38660006001870360018703876141c2565b9092509050613ef282826142a0565b9450505050506119fd565b613f0d846000600185038461430e565b925050506119fd565b60008282016001600160801b038085169082161015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b600082613f7957506000611aac565b82820282848281613f8657fe5b0414611aa95760405162461bcd60e51b81526004018080602001828103825260218152602001806149e56021913960400191505060405180910390fd5b6001600160a01b031660009081526008602052604090205463ffffffff600160a01b90910481161490565b60075460009063ffffffff16801580159061403057506001600160a01b03831660009081526008602052604090205463ffffffff828116600160a01b90920416145b1561403c5790506119fd565b61405163ffffffff8083169060019061387716565b9392505050565b6001600160a01b03821660009081526008602052604081205460045463ffffffff600160e01b909204821691600160c01b90910481168201908416118061386f5750159392505050565b60008282016001600160401b038085169082161015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b63ffffffff101590565b614109816137ec565b61411257611e01565b600061412963ffffffff80841690600190613bcc16565b63ffffffff8181166000908152600960209081526040808320805488861685528285209081556001918201549101805463ffffffff60801b1916600160801b928390049096169091029490941767ffffffffffffffff60401b1916600160401b426001600160401b03160217909355600a90529081209192506141ac82826148cb565b5060010180546001600160e01b03191690555050565b6000808284106141d157600080fd5b8386111580156141e15750848411155b6141ea57600080fd5b8286111580156141fa5750848311155b61420357600080fd5b600786860310156142245761421b878787878761439f565b91509150614296565b6000614231888888614772565b905080841161424257809550614290565b8481101561425557806001019650614290565b80851115801561426457508381105b61426a57fe5b6142768888838861430e565b92506142878882600101888761430e565b91506142969050565b50614203565b9550959350505050565b600080831280156142b15750600082135b806142c757506000831380156142c75750600082125b156142e75760026142d8848461484f565b816142df57fe5b059050611aac565b600060028085078185070105905061386f614308600286056002860561484f565b8261484f565b60008184111561431d57600080fd5b8282111561432a57600080fd5b82841015614381576007848403101561435657600061434c868686868761439f565b50915061386f9050565b6000614363868686614772565b90508083116143745780935061437b565b8060010194505b5061432a565b84848151811061438d57fe5b60200260200101519050949350505050565b6000806000868660010103905060008888600001815181106143bd57fe5b602002602001015190506000826001106143de576001600160ff1b036143f6565b8989600101815181106143ed57fe5b60200260200101515b905060008360021061440f576001600160ff1b03614427565b8a8a6002018151811061441e57fe5b60200260200101515b9050600084600310614440576001600160ff1b03614458565b8b8b6003018151811061444f57fe5b60200260200101515b9050600085600410614471576001600160ff1b03614489565b8c8c6004018151811061448057fe5b60200260200101515b90506000866005106144a2576001600160ff1b036144ba565b8d8d600501815181106144b157fe5b60200260200101515b90506000876006106144d3576001600160ff1b036144eb565b8e8e600601815181106144e257fe5b60200260200101515b9050858713156144f9579495945b83851315614505579293925b81831315614511579091905b8487131561451d579395935b83861315614529579294925b8083131561453357915b8486131561453f579394935b8082131561454957905b82871315614555579195915b81861315614561579094905b8085131561456b57935b82861315614577579194915b8084131561458157925b8285131561458d579193915b81841315614599579092905b828413156145a5579192915b8d8c03806145b557879a5061465b565b80600114156145c657869a5061465b565b80600214156145d757859a5061465b565b80600314156145e857849a5061465b565b80600414156145f957839a5061465b565b806005141561460a57829a5061465b565b806006141561461b57819a5061465b565b6040805162461bcd60e51b815260206004820152601060248201526f6b31206f7574206f6620626f756e647360801b604482015290519081900360640190fd5b8e8c038d8d141561467957508a995061429698505050505050505050565b806146905750969850614296975050505050505050565b80600114156146ab5750959850614296975050505050505050565b80600214156146c65750949850614296975050505050505050565b80600314156146e15750939850614296975050505050505050565b80600414156146fc5750929850614296975050505050505050565b80600514156147175750919850614296975050505050505050565b80600614156147325750909850614296975050505050505050565b6040805162461bcd60e51b815260206004820152601060248201526f6b32206f7574206f6620626f756e647360801b604482015290519081900360640190fd5b600080846002858501048151811061478657fe5b602002602001015190506001840393506001830192505b600184019350808585815181106147b057fe5b60200260200101511261479d575b600183039250808584815181106147d157fe5b6020026020010151136147be5782841015614841578483815181106147f257fe5b602002602001015185858151811061480657fe5b602002602001015186868151811061481a57fe5b6020026020010187868151811061482d57fe5b60209081029190910101919091525261484a565b82915050614051565b61479d565b60008282018183128015906148645750838112155b80614879575060008312801561487957508381125b611aa95760405162461bcd60e51b81526004018080602001828103825260218152602001806149a46021913960400191505060405180910390fd5b604080518082019091526000808252602082015290565b5080546000825590600052602060002090810190611e019190614989565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b828054828255906000526020600020908101928215614979579160200282015b8281111561497957825182559160200191906001019061495e565b50614985929150614989565b5090565b61170f91905b80821115614985576000815560010161498f56fe5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77536166654d6174683a206164646974696f6e206f766572666c6f770000000000536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f6e6c792063616c6c61626c65206279206f776e657200000000000000000000a26469706673582212200f0abb3bd7920f5b1dce3b30c7550db5ab11e005ee77ac2155a6722f7785a2b464736f6c63430006060033536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c806370dea79a11610167578063a4c0ed36116100ce578063d4cc54e411610087578063d4cc54e414610a25578063dc7f012414610a2d578063e2e4031714610a35578063e9ee6eeb14610a5b578063f2fde38b14610a89578063feaf968c14610aaf57610295565b8063a4c0ed361461092c578063b5ab58dc146109af578063b633620c146109cc578063c1075329146109e9578063c35905c614610a15578063c937450014610a1d57610295565b80638823da6c116101205780638823da6c146107b757806388aa80e7146107dd5780638da5cb5b1461086f57806398e5b12a146108775780639a6fc8f51461089e578063a118f2491461090657610295565b806370dea79a146107125780637284e4161461071a57806379ba5097146107975780637c2b0b211461079f5780638038e4a1146107a75780638205bf6a146107af57610295565b806340884c521161020b57806358609e44116101c457806358609e44146105e6578063613d8fcc146105ee578063628806ef146105f657806364efb22b1461061c578063668a0f02146106425780636b14daf81461064a57610295565b806340884c521461054a57806346fcff4c146105a25780634f8fc3b5146105c657806350d25bcd146105ce57806354fd4d50146105d657806357970e93146105de57610295565b8063313ce5671161025d578063313ce56714610341578063357ebb021461035f57806338aa4c72146103805780633969c20f146103ca5780633a5381b5146104f05780633d3d77141461051457610295565b80630a7569831461029a5780631327d3d8146102a4578063202ee0ed146102ca57806320ed0275146102ed57806323ca290314610327575b600080fd5b6102a2610ab7565b005b6102a2600480360360208110156102ba57600080fd5b50356001600160a01b0316610b45565b6102a2600480360360408110156102e057600080fd5b5080359060200135610bfb565b6102a26004803603606081101561030357600080fd5b5080356001600160a01b03169060208101351515906040013563ffffffff16610dcd565b61032f610f02565b60408051918252519081900360200190f35b610349610f26565b6040805160ff9092168252519081900360200190f35b610367610f2f565b6040805163ffffffff9092168252519081900360200190f35b6102a2600480360360a081101561039657600080fd5b506001600160801b038135169063ffffffff6020820135811691604081013582169160608201358116916080013516610f42565b6102a2600480360360c08110156103e057600080fd5b810190602081018135600160201b8111156103fa57600080fd5b82018360208201111561040c57600080fd5b803590602001918460208302840111600160201b8311171561042d57600080fd5b919390929091602081019035600160201b81111561044a57600080fd5b82018360208201111561045c57600080fd5b803590602001918460208302840111600160201b8311171561047d57600080fd5b919390929091602081019035600160201b81111561049a57600080fd5b8201836020820111156104ac57600080fd5b803590602001918460208302840111600160201b831117156104cd57600080fd5b919350915063ffffffff81358116916020810135821691604090910135166112e5565b6104f86114ad565b604080516001600160a01b039092168252519081900360200190f35b6102a26004803603606081101561052a57600080fd5b506001600160a01b038135811691602081013590911690604001356114bc565b6105526116af565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561058e578181015183820152602001610576565b505050509050019250505060405180910390f35b6105aa611712565b604080516001600160801b039092168252519081900360200190f35b6102a2611721565b61032f611838565b61032f6118c5565b6104f86118ca565b6103676118d9565b6103496118ec565b6102a26004803603602081101561060c57600080fd5b50356001600160a01b03166118f2565b6104f86004803603602081101561063257600080fd5b50356001600160a01b03166119d8565b61032f611a02565b6106fe6004803603604081101561066057600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561068a57600080fd5b82018360208201111561069c57600080fd5b803590602001918460018302840111600160201b831117156106bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a8a945050505050565b604080519115158252519081900360200190f35b610367611ab2565b610722611ac5565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561075c578181015183820152602001610744565b50505050905090810190601f1680156107895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a2611b53565b61032f611c02565b6102a2611c26565b61032f611cb5565b6102a2600480360360208110156107cd57600080fd5b50356001600160a01b0316611d3d565b61080f600480360360408110156107f357600080fd5b5080356001600160a01b0316906020013563ffffffff16611e04565b60408051981515895263ffffffff9097166020890152878701959095526001600160401b0393841660608801529190921660808601526001600160801b0391821660a086015260ff1660c08501521660e083015251908190036101000190f35b6104f8611f64565b61087f611f73565b6040805169ffffffffffffffffffff9092168252519081900360200190f35b6108c7600480360360208110156108b457600080fd5b503569ffffffffffffffffffff16612092565b6040805169ffffffffffffffffffff96871681526020810195909552848101939093526060840191909152909216608082015290519081900360a00190f35b6102a26004803603602081101561091c57600080fd5b50356001600160a01b0316612133565b6102a26004803603606081101561094257600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561097157600080fd5b82018360208201111561098357600080fd5b803590602001918460018302840111600160201b831117156109a457600080fd5b5090925090506121fb565b61032f600480360360208110156109c557600080fd5b503561225c565b61032f600480360360208110156109e257600080fd5b50356122e5565b6102a2600480360360408110156109ff57600080fd5b506001600160a01b03813516906020013561236e565b6105aa612510565b61036761251f565b6105aa612532565b6106fe612548565b61032f60048036036020811015610a4b57600080fd5b50356001600160a01b0316612551565b6102a260048036036040811015610a7157600080fd5b506001600160a01b0381358116916020013516612575565b6102a260048036036020811015610a9f57600080fd5b50356001600160a01b0316612658565b6108c76126f6565b6000546001600160a01b03163314610b04576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600e5460ff1615610b4357600e805460ff191690556040517f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963890600090a15b565b6000546001600160a01b03163314610b92576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6003546001600160a01b039081169082168114610bf757600380546001600160a01b0319166001600160a01b0384811691821790925560405190918316907fcfac5dc75b8d9a7e074162f59d9adcd33da59f0fe8dfb21580db298fc0fdad0d90600090a35b5050565b6060610c073384612795565b90507f0000000000000000000000000000000000000000000000000000000000000000821215610c7e576040805162461bcd60e51b815260206004820152601e60248201527f76616c75652062656c6f77206d696e5375626d697373696f6e56616c75650000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000821315610cf3576040805162461bcd60e51b815260206004820152601e60248201527f76616c75652061626f7665206d61785375626d697373696f6e56616c75650000604482015290519081900360640190fd5b8051819015610d805760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d45578181015183820152602001610d2d565b50505050905090810190601f168015610d725780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50610d8a83612a37565b610d948284612acc565b600080610da085612ba5565b91509150610dad85612cfd565b610db685612e40565b8115610dc657610dc68582612e9f565b5050505050565b6000546001600160a01b03163314610e1a576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6001600160a01b0383166000908152600b602052604090205460ff1615158215151415610e4657610efd565b8115610e89576001600160a01b0383166000908152600b60205260409020805460ff19168315151764ffffffff00191661010063ffffffff841602179055610eb2565b6001600160a01b0383166000908152600b60205260409020805468ffffffffffffffffff191690555b60408051831515815263ffffffff8316602082015281516001600160a01b038616927fc3df5a754e002718f2e10804b99e6605e7c701d95cec9552c7680ca2b6f2820a928290030190a25b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1681565b600454600160c01b900463ffffffff1681565b6000546001600160a01b03163314610f8f576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6000610f996118ec565b60ff1690508463ffffffff168463ffffffff161015610fff576040805162461bcd60e51b815260206004820152601960248201527f6d6178206d75737420657175616c2f657863656564206d696e00000000000000604482015290519081900360640190fd5b8363ffffffff168163ffffffff161015611060576040805162461bcd60e51b815260206004820152601760248201527f6d61782063616e6e6f742065786365656420746f74616c000000000000000000604482015290519081900360640190fd5b63ffffffff8116158061107e57508263ffffffff168163ffffffff16115b6110cf576040805162461bcd60e51b815260206004820152601960248201527f64656c61792063616e6e6f742065786365656420746f74616c00000000000000604482015290519081900360640190fd5b6110e1866001600160801b0316612f98565b600d546001600160801b03161015611140576040805162461bcd60e51b815260206004820152601e60248201527f696e73756666696369656e742066756e647320666f72207061796d656e740000604482015290519081900360640190fd5b600061114a6118ec565b60ff1611156111ae5760008563ffffffff16116111ae576040805162461bcd60e51b815260206004820152601a60248201527f6d696e206d7573742062652067726561746572207468616e2030000000000000604482015290519081900360640190fd5b85600460006101000a8154816001600160801b0302191690836001600160801b0316021790555084600460146101000a81548163ffffffff021916908363ffffffff16021790555083600460106101000a81548163ffffffff021916908363ffffffff16021790555082600460186101000a81548163ffffffff021916908363ffffffff160217905550816004601c6101000a81548163ffffffff021916908363ffffffff1602179055508363ffffffff168563ffffffff16600460009054906101000a90046001600160801b03166001600160801b03167f56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f8686604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a4505050505050565b6000546001600160a01b03163314611332576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b60005b88811015611369576113618a8a8381811061134c57fe5b905060200201356001600160a01b0316612fc6565b600101611335565b508584146113be576040805162461bcd60e51b815260206004820181905260248201527f6e6565642073616d65206f7261636c6520616e642061646d696e20636f756e74604482015290519081900360640190fd5b604d6113db876113cc6118ec565b60ff169063ffffffff61319416565b1115611424576040805162461bcd60e51b81526020600482015260136024820152721b585e081bdc9858db195cc8185b1b1bddd959606a1b604482015290519081900360640190fd5b60005b868110156114775761146f88888381811061143e57fe5b905060200201356001600160a01b031687878481811061145a57fe5b905060200201356001600160a01b03166131dc565b600101611427565b506004546114a2906001600160801b03811690859085908590600160e01b900463ffffffff16610f42565b505050505050505050565b6003546001600160a01b031681565b6001600160a01b0383811660009081526008602052604090206002015462010000900416331461152c576040805162461bcd60e51b815260206004820152601660248201527537b7363c9031b0b63630b1363290313c9030b236b4b760511b604482015290519081900360640190fd5b6001600160a01b03831660009081526008602052604090205481906001600160801b039081169082168110156115a9576040805162461bcd60e51b815260206004820152601f60248201527f696e73756666696369656e7420776974686472617761626c652066756e647300604482015290519081900360640190fd5b6115c26001600160801b0382168363ffffffff61346c16565b6001600160a01b038616600090815260086020526040902080546001600160801b0319166001600160801b03928316179055600d5461160a91600160801b909104168361346c565b600d80546001600160801b03928316600160801b029083161790556002546040805163a9059cbb60e01b81526001600160a01b03888116600483015293861660248201529051929091169163a9059cbb916044808201926020929091908290030181600087803b15801561167d57600080fd5b505af1158015611691573d6000803e3d6000fd5b505050506040513d60208110156116a757600080fd5b5051610dc657fe5b6060600c80548060200260200160405190810160405280929190818152602001828054801561170757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116116e9575b505050505090505b90565b600d546001600160801b031690565b6117296148b4565b50604080518082018252600d546001600160801b038082168352600160801b90910416602080830182905260025484516370a0823160e01b8152306004820152945193946000946117da94936001600160a01b03909316926370a082319260248082019391829003018186803b1580156117a257600080fd5b505afa1580156117b6573d6000803e3d6000fd5b505050506040513d60208110156117cc57600080fd5b50519063ffffffff6134db16565b82519091506001600160801b03168114610bf757600d80546001600160801b0319166001600160801b03831617905560405181907ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f90600090a25050565b600061187b336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b6118b8576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b6118c0613532565b905090565b600381565b6002546001600160a01b031681565b600454600160801b900463ffffffff1681565b600c5490565b6001600160a01b03818116600090815260086020526040902060030154163314611963576040805162461bcd60e51b815260206004820152601e60248201527f6f6e6c792063616c6c61626c652062792070656e64696e672061646d696e0000604482015290519081900360640190fd5b6001600160a01b0381166000818152600860205260408082206003810180546001600160a01b0319169055600201805462010000600160b01b031916336201000081029190911790915590519092917f0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe90491a350565b6001600160a01b03808216600090815260086020526040902060020154620100009004165b919050565b6000611a45336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b611a82576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b6118c0613554565b6000611a968383613567565b80611aa957506001600160a01b03831632145b90505b92915050565b600454600160e01b900463ffffffff1681565b6006805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611b4b5780601f10611b2057610100808354040283529160200191611b4b565b820191906000526020600020905b815481529060010190602001808311611b2e57829003601f168201915b505050505081565b6001546001600160a01b03163314611bab576040805162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b604482015290519081900360640190fd5b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b03163314611c73576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600e5460ff16610b4357600e805460ff191660011790556040517faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348090600090a1565b6000611cf8336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b611d35576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b6118c0613597565b6000546001600160a01b03163314611d8a576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6001600160a01b0381166000908152600f602052604090205460ff1615611e01576001600160a01b0381166000818152600f6020908152604091829020805460ff19169055815192835290517f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d19281900390910190a15b50565b600080808080808080333214611e5a576040805162461bcd60e51b81526020600482015260166024820152756f66662d636861696e2072656164696e67206f6e6c7960501b604482015290519081900360640190fd5b63ffffffff891615611f3d5763ffffffff89166000908152600960209081526040808320600a909252909120611e908c8c6135cc565b6001600160a01b038d1660009081526008602052604090206001908101548482015491840154600d548f936001600160401b031691600160401b900463ffffffff16906001600160801b0316611ee46118ec565b60018901546001600160401b0316611f07576004546001600160801b0316611f1d565b6001880154600160601b90046001600160801b03165b8363ffffffff169350995099509950995099509950995099505050611f57565b611f468a613621565b975097509750975097509750975097505b9295985092959890939650565b6000546001600160a01b031681565b336000908152600b602052604081205460ff16611fd7576040805162461bcd60e51b815260206004820152601860248201527f6e6f7420617574686f72697a6564207265717565737465720000000000000000604482015290519081900360640190fd5b60075463ffffffff16600081815260096020526040902060010154600160401b90046001600160401b03161515806120135750612013816137ec565b612064576040805162461bcd60e51b815260206004820152601f60248201527f7072657620726f756e64206d75737420626520737570657273656461626c6500604482015290519081900360640190fd5b600061207b63ffffffff8084169060019061387716565b9050612086816138c8565b63ffffffff1691505090565b60008060008060006120db336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b612118576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b61212186613996565b939a9299509097509550909350915050565b6000546001600160a01b03163314612180576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b6001600160a01b0381166000908152600f602052604090205460ff16611e01576001600160a01b0381166000818152600f6020908152604091829020805460ff19166001179055815192835290517f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49281900390910190a150565b801561224e576040805162461bcd60e51b815260206004820181905260248201527f7472616e7366657220646f65736e2774206163636570742063616c6c64617461604482015290519081900360640190fd5b612256611721565b50505050565b600061229f336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b6122dc576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b611aac82613ad0565b6000612328336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b612365576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b611aac82613b04565b6000546001600160a01b031633146123bb576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600d546004546001600160801b039182169183916123ea916123dd9116612f98565b839063ffffffff6134db16565b101561243d576040805162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e7420726573657276652066756e6473000000000000604482015290519081900360640190fd5b6002546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561249357600080fd5b505af11580156124a7573d6000803e3d6000fd5b505050506040513d60208110156124bd57600080fd5b5051612508576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015290519081900360640190fd5b610efd611721565b6004546001600160801b031681565b600454600160a01b900463ffffffff1681565b600d54600160801b90046001600160801b031690565b600e5460ff1681565b6001600160a01b03166000908152600860205260409020546001600160801b031690565b6001600160a01b038281166000908152600860205260409020600201546201000090041633146125e5576040805162461bcd60e51b815260206004820152601660248201527537b7363c9031b0b63630b1363290313c9030b236b4b760511b604482015290519081900360640190fd5b6001600160a01b0382811660008181526008602090815260409182902060030180546001600160a01b0319169486169485179055815133815290810193909352805191927fb79bf2e89c2d70dde91d2991fb1ea69b7e478061ad7c04ed5b02b96bc52b8104929081900390910190a25050565b6000546001600160a01b031633146126a5576040805162461bcd60e51b81526020600482015260166024820152600080516020614a06833981519152604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b600080600080600061273f336000368080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a8a92505050565b61277c576040805162461bcd60e51b81526020600482015260096024820152684e6f2061636365737360b81b604482015290519081900360640190fd5b612784613b43565b945094509450945094509091929394565b6001600160a01b03821660009081526008602052604090205460075460609163ffffffff600160801b90910481169116816127fe57604051806040016040528060128152602001716e6f7420656e61626c6564206f7261636c6560701b81525092505050611aac565b8363ffffffff168263ffffffff16111561284a57604051806040016040528060168152602001756e6f742079657420656e61626c6564206f7261636c6560501b81525092505050611aac565b6001600160a01b03851660009081526008602052604090205463ffffffff808616600160a01b9092041610156128b9576040518060400160405280601881526020017f6e6f206c6f6e67657220616c6c6f776564206f7261636c65000000000000000081525092505050611aac565b6001600160a01b03851660009081526008602052604090205463ffffffff808616600160c01b9092041610612927576040518060400160405280602081526020017f63616e6e6f74207265706f7274206f6e2070726576696f757320726f756e647381525092505050611aac565b8063ffffffff168463ffffffff1614158015612963575061295363ffffffff8083169060019061387716565b63ffffffff168463ffffffff1614155b801561297657506129748482613b6c565b155b156129ba576040518060400160405280601781526020017f696e76616c696420726f756e6420746f207265706f727400000000000000000081525092505050611aac565b8363ffffffff166001141580156129eb57506129e96129e463ffffffff80871690600190613bcc16565b613c2f565b155b15612a2f576040518060400160405280601f81526020017f70726576696f757320726f756e64206e6f7420737570657273656461626c650081525092505050611aac565b505092915050565b612a4081613c69565b612a4957611e01565b3360009081526008602052604090205460045463ffffffff600160e01b909204821691600160c01b9091048116820190831611801590612a8857508015155b15612a935750611e01565b612a9c82613c9a565b50336000908152600860205260409020805463ffffffff8316600160e01b026001600160e01b0390911617905550565b612ad581613e4d565b612b26576040805162461bcd60e51b815260206004820152601f60248201527f726f756e64206e6f7420616363657074696e67207375626d697373696f6e7300604482015290519081900360640190fd5b63ffffffff81166000818152600a6020908152604080832080546001808201835591855283852001879055338085526008909352818420805463ffffffff60c01b1916600160c01b8702178155018690555190929185917f92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c9190a45050565b63ffffffff8082166000908152600a602052604081206001810154905491928392600160201b909204161115612be057506000905080612cf8565b63ffffffff83166000908152600a602090815260408083208054825181850281018501909352808352612c4693830182828015612c3c57602002820191906000526020600020905b815481526020019060010190808311612c28575b5050505050613e6d565b63ffffffff8516600081815260096020908152604091829020848155600101805467ffffffffffffffff60401b1916600160401b426001600160401b038116919091029190911763ffffffff60801b1916600160801b8602179091556007805467ffffffff000000001916600160201b860217905582519081529151939450919284927f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f928290030190a36001925090505b915091565b63ffffffff81166000908152600a6020526040902060010154600160601b90046001600160801b0316612d2e6148b4565b5060408051808201909152600d546001600160801b03808216808452600160801b909204166020830152612d68908363ffffffff61346c16565b6001600160801b0390811682526020820151612d8b91168363ffffffff613f1616565b6001600160801b0390811660208084018290528351600d8054600160801b9094029185166001600160801b03199094169390931784161790915533600090815260089091526040902054612de691168363ffffffff613f1616565b3360009081526008602052604080822080546001600160801b0319166001600160801b03948516179055835190519216917ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f9190a2505050565b63ffffffff8082166000908152600a602052604090206001810154905491161115612e6a57611e01565b63ffffffff81166000908152600a6020526040812090612e8a82826148cb565b5060010180546001600160e01b031916905550565b6003546001600160a01b031680612eb65750610bf7565b6000612ecd63ffffffff80861690600190613bcc16565b63ffffffff808216600090815260096020908152604080832060018101549054825163beed9b5160e01b8152600160801b90920486166004830181905260248301829052958b166044830152606482018a90529151959650939490936001600160a01b0388169363beed9b5193620186a093608480850194929391928390030190829088803b158015612f5f57600080fd5b5087f193505050508015612f8557506040513d6020811015612f8057600080fd5b505160015b612f8e57612f90565b505b505050505050565b6000611aac6002612fba612faa6118ec565b859060ff1663ffffffff613f6a16565b9063ffffffff613f6a16565b612fcf81613fc3565b613015576040805162461bcd60e51b81526020600482015260126024820152711bdc9858db19481b9bdd08195b98589b195960721b604482015290519081900360640190fd5b60075461302e9063ffffffff9081169060019061387716565b6001600160a01b0382166000908152600860205260408120805463ffffffff93909316600160a01b0263ffffffff60a01b1990931692909217909155600c61308860016130796118ec565b60ff169063ffffffff6134db16565b8154811061309257fe5b6000918252602080832091909101546001600160a01b0385811680855260089093526040808520600290810180549390941680875291862001805461ffff90931661ffff199384168117909155939094528154169055600c80549293509091839190839081106130fe57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600c80548061313757fe5b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038516907f18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e908390a3505050565b600082820183811015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b6131e582613fc3565b15613230576040805162461bcd60e51b81526020600482015260166024820152751bdc9858db1948185b1c9958591e48195b98589b195960521b604482015290519081900360640190fd5b6001600160a01b038116613283576040805162461bcd60e51b8152602060048201526015602482015274063616e6e6f74207365742061646d696e20746f203605c1b604482015290519081900360640190fd5b6001600160a01b038281166000908152600860205260409020600201546201000090041615806132d857506001600160a01b038281166000908152600860205260409020600201546201000090048116908216145b613329576040805162461bcd60e51b815260206004820152601c60248201527f6f776e65722063616e6e6f74206f76657277726974652061646d696e00000000604482015290519081900360640190fd5b61333282613fee565b6001600160a01b03808416600081815260086020526040808220805463ffffffff60a01b1963ffffffff97909716600160801b0263ffffffff60801b19909116179590951663ffffffff60a01b178555600c80546002909601805461ffff90971661ffff19909716969096178655805460018181019092557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b031916851790558383528554948716620100000262010000600160b01b0319909516949094179094559251919290917f18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e9190a3806001600160a01b0316826001600160a01b03167f0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe90460405160405180910390a35050565b6000826001600160801b0316826001600160801b031611156134d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828211156134d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b600754600160201b900463ffffffff1660009081526009602052604090205490565b600754600160201b900463ffffffff1690565b6001600160a01b0382166000908152600f602052604081205460ff1680611aa9575050600e5460ff161592915050565b600754600160201b900463ffffffff16600090815260096020526040902060010154600160401b90046001600160401b031690565b63ffffffff81166000908152600960205260408120600101546001600160401b031615613617576135fc82613e4d565b8015613610575061360d8383612795565b51155b9050611aac565b6135fc8383614058565b6001600160a01b0381166000908152600860205260408120600754815483928392839283928392839283927fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b929091849163ffffffff908116600160c01b90920416148061369e575060075461369c9063ffffffff16613e4d565b155b6007549091506136b39063ffffffff16613c2f565b80156136bc5750805b15613715576007546136da9063ffffffff9081169060019061387716565b63ffffffff81166000908152600960205260409020600454919b506001600160801b039091169450925061370e8c8b614058565b9a5061375f565b60075463ffffffff166000818152600960209081526040808320600a90925290912060010154919b50600160601b9091046001600160801b03169450925061375c8a613e4d565b9a505b6137698c8b612795565b51156137745760009a505b6001808301548482015463ffffffff808e166000908152600a6020526040902090930154600d548f948f94936001600160401b031692600160401b900416906001600160801b03166137c46118ec565b8a8363ffffffff1693509a509a509a509a509a509a509a509a50505050919395975091939597565b63ffffffff8082166000908152600960209081526040808320600190810154600a909352908320015491926001600160401b0390911691600160401b9004168115801590613840575060008163ffffffff16115b801561386f5750426138646001600160401b03841663ffffffff808516906140a216565b6001600160401b0316105b949350505050565b600082820163ffffffff8085169082161015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b6138d181613c69565b6138da57611e01565b336000908152600b602052604090205463ffffffff6501000000000082048116916101009004811682019083161180613911575080155b613958576040805162461bcd60e51b81526020600482015260136024820152726d7573742064656c617920726571756573747360681b604482015290519081900360640190fd5b61396182613c9a565b50336000908152600b60205260409020805463ffffffff8316650100000000000268ffffffff00000000001990911617905550565b60008060008060006139a66148e9565b5063ffffffff8087166000908152600960209081526040918290208251608081018452815481526001909101546001600160401b0380821693830193909352600160401b810490921692810192909252600160801b90049091166060820181905215801590613a255750613a258769ffffffffffffffffffff166140f6565b6040518060400160405280600f81526020016e139bc819185d18481c1c995cd95b9d608a1b81525090613a995760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610d45578181015183820152602001610d2d565b50805160208201516040830151606090930151989991986001600160401b0391821698509216955063ffffffff9091169350915050565b6000613adb826140f6565b15613afc575063ffffffff81166000908152600960205260409020546119fd565b506000919050565b6000613b0f826140f6565b15613afc575063ffffffff8116600090815260096020526040902060010154600160401b90046001600160401b03166119fd565b6000806000806000612784600760049054906101000a900463ffffffff1663ffffffff16612092565b60008163ffffffff16613b8f60018563ffffffff1661387790919063ffffffff16565b63ffffffff16148015611aa957505063ffffffff16600090815260096020526040902060010154600160401b90046001600160401b031615919050565b60008263ffffffff168263ffffffff1611156134d5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b63ffffffff8116600090815260096020526040812060010154600160401b90046001600160401b0316151580611aac5750611aac826137ec565b600754600090613c859063ffffffff9081169060019061387716565b63ffffffff168263ffffffff16149050919050565b613cb7613cb263ffffffff80841690600190613bcc16565b614100565b6007805463ffffffff191663ffffffff8316179055613cd4614910565b5060408051600060a0820181815260c083018452825260045463ffffffff600160801b82048116602080860191909152600160a01b8304821685870152600160e01b8304821660608601526001600160801b03909216608085015285168252600a81529290208151805192938493613d4f928492019061493e565b5060208281015160019283018054604080870151606088015160809098015163ffffffff1990931663ffffffff9586161767ffffffff000000001916600160201b91861691909102176bffffffff00000000000000001916600160401b97851697909702969096176fffffffffffffffffffffffffffffffff60601b1916600160601b6001600160801b03909216919091021790558516600081815260098352849020909201805467ffffffffffffffff1916426001600160401b039081169190911791829055845191168152925133937f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac6027192908290030190a35050565b63ffffffff9081166000908152600a602052604090206001015416151590565b60008151600010613ebe576040805162461bcd60e51b81526020600482015260166024820152756c697374206d757374206e6f7420626520656d70747960501b604482015290519081900360640190fd5b81516002810460018216613efd57600080613ee38660006001870360018703876141c2565b9092509050613ef282826142a0565b9450505050506119fd565b613f0d846000600185038461430e565b925050506119fd565b60008282016001600160801b038085169082161015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b600082613f7957506000611aac565b82820282848281613f8657fe5b0414611aa95760405162461bcd60e51b81526004018080602001828103825260218152602001806149e56021913960400191505060405180910390fd5b6001600160a01b031660009081526008602052604090205463ffffffff600160a01b90910481161490565b60075460009063ffffffff16801580159061403057506001600160a01b03831660009081526008602052604090205463ffffffff828116600160a01b90920416145b1561403c5790506119fd565b61405163ffffffff8083169060019061387716565b9392505050565b6001600160a01b03821660009081526008602052604081205460045463ffffffff600160e01b909204821691600160c01b90910481168201908416118061386f5750159392505050565b60008282016001600160401b038085169082161015611aa9576040805162461bcd60e51b815260206004820152601b60248201526000805160206149c5833981519152604482015290519081900360640190fd5b63ffffffff101590565b614109816137ec565b61411257611e01565b600061412963ffffffff80841690600190613bcc16565b63ffffffff8181166000908152600960209081526040808320805488861685528285209081556001918201549101805463ffffffff60801b1916600160801b928390049096169091029490941767ffffffffffffffff60401b1916600160401b426001600160401b03160217909355600a90529081209192506141ac82826148cb565b5060010180546001600160e01b03191690555050565b6000808284106141d157600080fd5b8386111580156141e15750848411155b6141ea57600080fd5b8286111580156141fa5750848311155b61420357600080fd5b600786860310156142245761421b878787878761439f565b91509150614296565b6000614231888888614772565b905080841161424257809550614290565b8481101561425557806001019650614290565b80851115801561426457508381105b61426a57fe5b6142768888838861430e565b92506142878882600101888761430e565b91506142969050565b50614203565b9550959350505050565b600080831280156142b15750600082135b806142c757506000831380156142c75750600082125b156142e75760026142d8848461484f565b816142df57fe5b059050611aac565b600060028085078185070105905061386f614308600286056002860561484f565b8261484f565b60008184111561431d57600080fd5b8282111561432a57600080fd5b82841015614381576007848403101561435657600061434c868686868761439f565b50915061386f9050565b6000614363868686614772565b90508083116143745780935061437b565b8060010194505b5061432a565b84848151811061438d57fe5b60200260200101519050949350505050565b6000806000868660010103905060008888600001815181106143bd57fe5b602002602001015190506000826001106143de576001600160ff1b036143f6565b8989600101815181106143ed57fe5b60200260200101515b905060008360021061440f576001600160ff1b03614427565b8a8a6002018151811061441e57fe5b60200260200101515b9050600084600310614440576001600160ff1b03614458565b8b8b6003018151811061444f57fe5b60200260200101515b9050600085600410614471576001600160ff1b03614489565b8c8c6004018151811061448057fe5b60200260200101515b90506000866005106144a2576001600160ff1b036144ba565b8d8d600501815181106144b157fe5b60200260200101515b90506000876006106144d3576001600160ff1b036144eb565b8e8e600601815181106144e257fe5b60200260200101515b9050858713156144f9579495945b83851315614505579293925b81831315614511579091905b8487131561451d579395935b83861315614529579294925b8083131561453357915b8486131561453f579394935b8082131561454957905b82871315614555579195915b81861315614561579094905b8085131561456b57935b82861315614577579194915b8084131561458157925b8285131561458d579193915b81841315614599579092905b828413156145a5579192915b8d8c03806145b557879a5061465b565b80600114156145c657869a5061465b565b80600214156145d757859a5061465b565b80600314156145e857849a5061465b565b80600414156145f957839a5061465b565b806005141561460a57829a5061465b565b806006141561461b57819a5061465b565b6040805162461bcd60e51b815260206004820152601060248201526f6b31206f7574206f6620626f756e647360801b604482015290519081900360640190fd5b8e8c038d8d141561467957508a995061429698505050505050505050565b806146905750969850614296975050505050505050565b80600114156146ab5750959850614296975050505050505050565b80600214156146c65750949850614296975050505050505050565b80600314156146e15750939850614296975050505050505050565b80600414156146fc5750929850614296975050505050505050565b80600514156147175750919850614296975050505050505050565b80600614156147325750909850614296975050505050505050565b6040805162461bcd60e51b815260206004820152601060248201526f6b32206f7574206f6620626f756e647360801b604482015290519081900360640190fd5b600080846002858501048151811061478657fe5b602002602001015190506001840393506001830192505b600184019350808585815181106147b057fe5b60200260200101511261479d575b600183039250808584815181106147d157fe5b6020026020010151136147be5782841015614841578483815181106147f257fe5b602002602001015185858151811061480657fe5b602002602001015186868151811061481a57fe5b6020026020010187868151811061482d57fe5b60209081029190910101919091525261484a565b82915050614051565b61479d565b60008282018183128015906148645750838112155b80614879575060008312801561487957508381125b611aa95760405162461bcd60e51b81526004018080602001828103825260218152602001806149a46021913960400191505060405180910390fd5b604080518082019091526000808252602082015290565b5080546000825590600052602060002090810190611e019190614989565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b828054828255906000526020600020908101928215614979579160200282015b8281111561497957825182559160200191906001019061495e565b50614985929150614989565b5090565b61170f91905b80821115614985576000815560010161498f56fe5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77536166654d6174683a206164646974696f6e206f766572666c6f770000000000536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f6e6c792063616c6c61626c65206279206f776e657200000000000000000000a26469706673582212200f0abb3bd7920f5b1dce3b30c7550db5ab11e005ee77ac2155a6722f7785a2b464736f6c63430006060033",
  "immutableReferences": {
    "1136": [
      {
        "length": 32,
        "start": 3083
      },
      {
        "length": 32,
        "start": 7172
      }
    ],
    "1138": [
      {
        "length": 32,
        "start": 3200
      },
      {
        "length": 32,
        "start": 3844
      }
    ]
  },
  "sourceMap": "332:7336:5:-:0;;;1338:396;5:9:-1;2:2;;;27:1;24;17:12;2:2;1338:396:5;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1338:396:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1338:396:5;;420:4:-1;411:14;;;;1338:396:5;;;;;411:14:-1;1338:396:5;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1338:396:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1338:396:5;;-1:-1:-1;;438:5:12;:18;;446:10;-1:-1:-1;;;;;;438:18:12;;;;;;5316:9:8;:37;;;;;-1:-1:-1;;;;;5316:37:8;;;;;;;-1:-1:-1;1601:14:5;;1621:8;;1635:10;;1651:19;;1676;;1701:9;;1716:12;;5359:53:8;;1601:14:5;;438:5:12;;1621:8:5;5359:18:8;:53::i;:::-;5418:24;5431:10;-1:-1:-1;;;;;5418:12:8;:24;:::i;:::-;5448:40;;;;5494;;;;5540:8;:20;;-1:-1:-1;;5540:20:8;;;;;;;5566:26;;;;:11;;:26;;;;;:::i;:::-;;5627:38;5655:8;5647:17;;5627:15;:19;;;;;;:38;;;;:::i;:::-;5598:9;;;:6;:9;;:19;:68;;-1:-1:-1;;;;;5598:68:8;;;;;;-1:-1:-1;;;;;;;;5598:68:8;;;;;;;;;-1:-1:-1;;708:12:18;:19;;-1:-1:-1;;708:19:18;5598::8;708::18;;;-1:-1:-1;332:7336:5;;-1:-1:-1;;;;;;;;;;;;;332:7336:5;8511:1023:8;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;8709:16:8::1;8728:13;-1:-1:-1::0;;;;;8728:11:8::1;:13:::0;:::i:1;:::-;8709:32;;;;8799:15;8780:34;;:15;:34;;;;8772:72;;;::::0;;-1:-1:-1;;;8772:72:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8871:15;8858:28;;:9;:28;;;;8850:64;;;::::0;;-1:-1:-1;;;8850:64:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8928:14;::::0;::::1;::::0;;:43:::1;;;8958:13;8946:25;;:9;:25;;;8928:43;8920:81;;;::::0;;-1:-1:-1;;;8920:81:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9042:31;-1:-1:-1::0;;;;;9042:31:8;::::1;-1:-1:-1::0;;;;;9042:15:8::1;:31:::0;:::i:1;:::-;9015:13;:23:::0;-1:-1:-1;;;;;9015:23:8::1;:58;;9007:101;;;::::0;;-1:-1:-1;;;9007:101:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9134:1;9118:13;-1:-1:-1::0;;;;;9118:11:8::1;:13:::0;:::i:1;:::-;:17;;;9114:96;;;9171:1;9153:15;:19;;;9145:58;;;::::0;;-1:-1:-1;;;9145:58:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9232:14;9216:13;;:30;;;;;-1:-1:-1::0;;;;;9216:30:8::1;;;;;-1:-1:-1::0;;;;;9216:30:8::1;;;;;;9273:15;9252:18;;:36;;;;;;;;;;;;;;;;;;9315:15;9294:18;;:36;;;;;;;;;;;;;;;;;;9351:13;9336:12;;:28;;;;;;;;;;;;;;;;;;9380:8;9370:7;;:18;;;;;;;;;;;;;;;;;;9471:15;9400:129;;9448:15;9400:129;;9427:13;;;;;;;;;-1:-1:-1::0;;;;;9427:13:8::1;-1:-1:-1::0;;;;;9400:129:8::1;;9494:13;9515:8;9400:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:1:12;8511:1023:8::0;;;;;:::o;22420:284::-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;22527:9:8::1;::::0;-1:-1:-1;;;;;22527:9:8;;::::1;::::0;22548:25;::::1;::::0;::::1;22544:156;;22583:9;:55:::0;;-1:-1:-1;;;;;;22583:55:8::1;-1:-1:-1::0;;;;;22583:55:8;;::::1;::::0;;::::1;::::0;;;22652:41:::1;::::0;22583:55;;22652:41;::::1;::::0;::::1;::::0;-1:-1:-1;;22652:41:8::1;22544:156;1232:1:12;22420:284:8::0;:::o;1277:165:29:-;1335:7;1363:1;1358;:6;;1350:49;;;;;-1:-1:-1;;;1350:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1417:5:29;;;1277:165;;;;;:::o;10390:98:8:-;10460:15;:22;10390:98;;:::o;29216:151::-;29292:7;29316:46;2560:1;29316:26;29328:13;-1:-1:-1;;;;;29328:11:8;:13;:::i;:::-;29316:26;;:7;:11;;;;;;:26;;;;:::i;:::-;:30;;;;;;:46;;;;:::i;1670:418:29:-;1728:7;1952:6;1948:35;;-1:-1:-1;1975:1:29;1968:8;;1948:35;2001:5;;;2005:1;2001;:5;:1;2020:5;;;;;:10;2012:56;;;;-1:-1:-1;;;2012:56:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:1;1670:418;-1:-1:-1;;;1670:418:29:o;332:7336:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;332:7336:5;;;-1:-1:-1;332:7336:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "332:7336:5:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;332:7336:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1847:159:18;;;:::i;:::-;;22420:284:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;22420:284:8;-1:-1:-1;;;;;22420:284:8;;:::i;5906:690::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5906:690:8;;;;;;;:::i;20171:436::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;20171:436:8;;-1:-1:-1;;;;;20171:436:8;;;;;;;;;;;;;;;:::i;2056:42::-;;;:::i;:::-;;;;;;;;;;;;;;;;1937:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1882:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8511:1023;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;;8511:1023:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7344:724::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;7344:724:8;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;7344:724:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7344:724:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7344:724:8;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;7344:724:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7344:724:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7344:724:8;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;7344:724:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7344:724:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7344:724:8;;-1:-1:-1;7344:724:8;-1:-1:-1;7344:724:8;;;;;;;;;;;;;;;;;;;;:::i;1702:45::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1702:45:8;;;;;;;;;;;;;;17024:614;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;17024:614:8;;;;;;;;;;;;;;;;;:::i;10582:96::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10582:96:8;;;;;;;;;;;;;;;;;9808:113;;;:::i;:::-;;;;-1:-1:-1;;;;;9808:113:8;;;;;;;;;;;;;;10003:328;;;:::i;5092:136:5:-;;;:::i;2103:44:8:-;;;:::i;1663:35::-;;;:::i;1810:32::-;;;:::i;10390:98::-;;;:::i;19077:290::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;19077:290:8;-1:-1:-1;;;;;19077:290:8;;:::i;18325:121::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18325:121:8;-1:-1:-1;;;;;18325:121:8;;:::i;5659:135:5:-;;;:::i;796:209:17:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;796:209:17;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;796:209:17;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;796:209:17;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;796:209:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;796:209:17;;-1:-1:-1;796:209:17;;-1:-1:-1;;;;;796:209:17:i;:::-;;;;;;;;;;;;;;;;;;1912:21:8;;;:::i;1971:34::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1971:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:254:12;;;:::i;2010:42:8:-;;;:::i;1627:157:18:-;;;:::i;6226:143:5:-;;;:::i;1391:175:18:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1391:175:18;-1:-1:-1;;;;;1391:175:18;;:::i;21298:946:8:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21298:946:8;;-1:-1:-1;;;;;21298:946:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21298:946:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;21298:946:8;;;;;;;;;;;;;;;;;;;;;;;;;;;179:20:12;;;:::i;19438:393:8:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2829:280:5;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2829:280:5;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:170:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1112:170:18;-1:-1:-1;;;;;1112:170:18;;:::i;20886:181:8:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;20886:181:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11:28;;8:2;;;52:1;49;42:12;8:2;20886:181:8;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;20886:181:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;20886:181:8;;-1:-1:-1;20886:181:8;-1:-1:-1;20886:181:8;:::i;6843:154:5:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6843:154:5;;:::i;7504:161::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7504:161:5;;:::i;17821:362:8:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;17821:362:8;;;;;;;;:::i;1778:28::-;;;:::i;1846:32::-;;;:::i;9616:113::-;;;:::i;464:24:18:-;;;:::i;16593:139:8:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;16593:139:8;-1:-1:-1;;;;;16593:139:8;;:::i;18645:273::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;18645:273:8;;;;;;;;;;:::i;567:150:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;567:150:12;-1:-1:-1;;;;;567:150:12;;:::i;4400:263:5:-;;;:::i;1847:159:18:-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;1918:12:18::1;::::0;::::1;;1914:88;;;1940:12;:20:::0;;-1:-1:-1;;1940:20:18::1;::::0;;1974:21:::1;::::0;::::1;::::0;1955:5:::1;::::0;1974:21:::1;1914:88;1847:159::o:0;22420:284:8:-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;22527:9:8::1;::::0;-1:-1:-1;;;;;22527:9:8;;::::1;::::0;22548:25;::::1;::::0;::::1;22544:156;;22583:9;:55:::0;;-1:-1:-1;;;;;;22583:55:8::1;-1:-1:-1::0;;;;;22583:55:8;;::::1;::::0;;::::1;::::0;;;22652:41:::1;::::0;22583:55;;22652:41;::::1;::::0;::::1;::::0;-1:-1:-1;;22652:41:8::1;22544:156;1232:1:12;22420:284:8::0;:::o;5906:690::-;5981:18;6002:49;6022:10;6041:8;6002:19;:49::i;:::-;5981:70;;6080:18;6065:11;:33;;6057:76;;;;;-1:-1:-1;;;6057:76:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;6162:18;6147:11;:33;;6139:76;;;;;-1:-1:-1;;;6139:76:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;6229:12;;:5;;:17;6221:41;;;;-1:-1:-1;;;6221:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6221:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6269:42;6301:8;6269:24;:42::i;:::-;6317:47;6334:11;6354:8;6317:16;:47::i;:::-;6371:12;6385:16;6405:35;6430:8;6405:17;:35::i;:::-;6370:70;;;;6446:27;6463:8;6446:9;:27::i;:::-;6479:36;6505:8;6479:18;:36::i;:::-;6525:7;6521:71;;;6542:43;6564:8;6575:9;6542:14;:43::i;:::-;5906:690;;;;;:::o;20171:436::-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;20298:22:8;::::1;;::::0;;;:10:::1;:22;::::0;;;;:33;::::1;;:48;;::::0;::::1;;;20294:61;;;20348:7;;20294:61;20365:11;20361:174;;;-1:-1:-1::0;;;;;20386:22:8;::::1;;::::0;;;:10:::1;:22;::::0;;;;:47;;-1:-1:-1;;20386:47:8::1;::::0;::::1;;;-1:-1:-1::0;;20441:37:8::1;20386:47;20441:37;::::0;::::1;;;::::0;;20361:174:::1;;;-1:-1:-1::0;;;;;20506:22:8;::::1;;::::0;;;:10:::1;:22;::::0;;;;20499:29;;-1:-1:-1;;20499:29:8;;;20361:174:::1;20546:56;::::0;;;::::1;;::::0;;::::1;::::0;::::1;;::::0;::::1;::::0;;;-1:-1:-1;;;;;20546:56:8;::::1;::::0;::::1;::::0;;;;;;::::1;1232:1:12;20171:436:8::0;;;:::o;2056:42::-;;;:::o;1937:30::-;;;;;;:::o;1882:26::-;;;-1:-1:-1;;;1882:26:8;;;;;:::o;8511:1023::-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;8709:16:8::1;8728:13;:11;:13::i;:::-;8709:32;;;;8799:15;8780:34;;:15;:34;;;;8772:72;;;::::0;;-1:-1:-1;;;8772:72:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8871:15;8858:28;;:9;:28;;;;8850:64;;;::::0;;-1:-1:-1;;;8850:64:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8928:14;::::0;::::1;::::0;;:43:::1;;;8958:13;8946:25;;:9;:25;;;8928:43;8920:81;;;::::0;;-1:-1:-1;;;8920:81:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9042:31;9058:14;-1:-1:-1::0;;;;;9042:31:8::1;:15;:31::i;:::-;9015:13;:23:::0;-1:-1:-1;;;;;9015:23:8::1;:58;;9007:101;;;::::0;;-1:-1:-1;;;9007:101:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9134:1;9118:13;:11;:13::i;:::-;:17;;;9114:96;;;9171:1;9153:15;:19;;;9145:58;;;::::0;;-1:-1:-1;;;9145:58:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9232:14;9216:13;;:30;;;;;-1:-1:-1::0;;;;;9216:30:8::1;;;;;-1:-1:-1::0;;;;;9216:30:8::1;;;;;;9273:15;9252:18;;:36;;;;;;;;;;;;;;;;;;9315:15;9294:18;;:36;;;;;;;;;;;;;;;;;;9351:13;9336:12;;:28;;;;;;;;;;;;;;;;;;9380:8;9370:7;;:18;;;;;;;;;;;;;;;;;;9471:15;9400:129;;9448:15;9400:129;;9427:13;;;;;;;;;-1:-1:-1::0;;;;;9427:13:8::1;-1:-1:-1::0;;;;;9400:129:8::1;;9494:13;9515:8;9400:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:1:12;8511:1023:8::0;;;;;:::o;7344:724::-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;7596:9:8::1;7591:86;7611:19:::0;;::::1;7591:86;;;7645:25;7658:8;;7667:1;7658:11;;;;;;;;;;;;;-1:-1:-1::0;;;;;7658:11:8::1;7645:12;:25::i;:::-;7632:3;;7591:86;;;-1:-1:-1::0;7691:36:8;;::::1;7683:81;;;::::0;;-1:-1:-1;;;7683:81:8;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2609:2;7778:41;7805:6:::0;7786:13:::1;:11;:13::i;:::-;7778:22;;::::0;:41:::1;:26;:41;:::i;:::-;:61;;7770:93;;;::::0;;-1:-1:-1;;;7770:93:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7770:93:8;;;;;;;;;;;;;::::1;;7875:9;7870:96;7890:17:::0;;::::1;7870:96;;;7922:37;7932:6;;7939:1;7932:9;;;;;;;;;;;;;-1:-1:-1::0;;;;;7932:9:8::1;7943:12;;7956:1;7943:15;;;;;;;;;;;;;-1:-1:-1::0;;;;;7943:15:8::1;7922:9;:37::i;:::-;7909:3;;7870:96;;;-1:-1:-1::0;7991:13:8::1;::::0;7972:91:::1;::::0;-1:-1:-1;;;;;7991:13:8;::::1;::::0;8006:15;;8023;;8040:13;;-1:-1:-1;;;8055:7:8;::::1;;;7972:18;:91::i;:::-;7344:724:::0;;;;;;;;;:::o;1702:45::-;;;-1:-1:-1;;;;;1702:45:8;;:::o;17024:614::-;-1:-1:-1;;;;;17132:16:8;;;;;;;:7;:16;;;;;:22;;;;;;;17158:10;17132:36;17124:71;;;;;-1:-1:-1;;;17124:71:8;;;;;;;;;;;;-1:-1:-1;;;17124:71:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;17346:16:8;;17287:14;17346:16;;;:7;:16;;;;;:29;17312:7;;-1:-1:-1;;;;;17346:29:8;;;;17389:19;;;;;17381:63;;;;;-1:-1:-1;;;17381:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;17483:21;-1:-1:-1;;;;;17483:13:8;;17497:6;17483:21;:13;:21;:::i;:::-;-1:-1:-1;;;;;17451:16:8;;;;;;:7;:16;;;;;:53;;-1:-1:-1;;;;;;17451:53:8;-1:-1:-1;;;;;17451:53:8;;;;;;17536:13;:23;:35;;-1:-1:-1;;;17536:23:8;;;;17564:6;17536:27;:35::i;:::-;17510:13;:61;;-1:-1:-1;;;;;17510:61:8;;;-1:-1:-1;;;17510:61:8;;;;;;;17585:9;;:47;;;-1:-1:-1;;;17585:47:8;;-1:-1:-1;;;;;17585:47:8;;;;;;;17616:15;;;17585:47;;;;;;:9;;;;;:18;;:47;;;;;;;;;;;;;;;17510:23;17585:9;:47;;;2:2:-1;;;;27:1;24;17:12;2:2;17585:47:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17585:47:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;17585:47:8;17578:55;;;10582:96;10627:16;10658:15;10651:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10651:22:8;;;;;;;;;;;;;;;;;;;;;;;10582:96;;:::o;9808:113::-;9893:13;:23;-1:-1:-1;;;;;9893:23:8;9808:113;:::o;10003:328::-;10054:18;;:::i;:::-;-1:-1:-1;10054:34:8;;;;;;;;10075:13;10054:34;-1:-1:-1;;;;;10054:34:8;;;;;-1:-1:-1;;;10054:34:8;;;;;;;;;;;10118:9;;:34;;-1:-1:-1;;;10118:34:8;;10146:4;10118:34;;;;;;10054;;-1:-1:-1;;10118:55:8;;10054:34;-1:-1:-1;;;;;10118:9:8;;;;:19;;:34;;;;;;;;;;;:9;:34;;;2:2:-1;;;;27:1;24;17:12;2:2;10118:34:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10118:34:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10118:34:8;;:55;:38;:55;:::i;:::-;10184:15;;10095:78;;-1:-1:-1;;;;;;10184:31:8;;;10180:147;;10225:13;:47;;-1:-1:-1;;;;;;10225:47:8;-1:-1:-1;;;;;10225:47:8;;;;;10285:35;;10225:47;;10285:35;;-1:-1:-1;;10285:35:8;10003:328;;:::o;5092:136:5:-;5180:6;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;5203:20:5::1;:18;:20::i;:::-;5196:27;;5092:136:::0;:::o;2103:44:8:-;2146:1;2103:44;:::o;1663:35::-;;;-1:-1:-1;;;;;1663:35:8;;:::o;1810:32::-;;;-1:-1:-1;;;1810:32:8;;;;;:::o;10390:98::-;10460:15;:22;10390:98;:::o;19077:290::-;-1:-1:-1;;;;;19144:16:8;;;;;;;:7;:16;;;;;:29;;;;19177:10;19144:43;19136:86;;;;;-1:-1:-1;;;19136:86:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19228:16:8;;19268:1;19228:16;;;:7;:16;;;;;;:29;;;:42;;-1:-1:-1;;;;;;19228:42:8;;;19276:22;;:35;;-1:-1:-1;;;;;;19276:35:8;19301:10;19276:35;;;;;;;;;;19323:39;;19301:10;;19228:16;19323:39;;;19077:290;:::o;18325:121::-;-1:-1:-1;;;;;18419:16:8;;;18395:7;18419:16;;;:7;:16;;;;;:22;;;;;;;18325:121;;;;:::o;5659:135:5:-;5746:7;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;5770:19:5::1;:17;:19::i;796:209:17:-:0;924:4;945:33;961:5;968:9;945:15;:33::i;:::-;:55;;;-1:-1:-1;;;;;;982:18:17;;991:9;982:18;945:55;938:62;;796:209;;;;;:::o;1912:21:8:-;;;-1:-1:-1;;;1912:21:8;;;;;:::o;1971:34::-;;;;;;;;;;;;;;;-1:-1:-1;;1971:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;806:254:12:-;876:12;;-1:-1:-1;;;;;876:12:12;862:10;:26;854:61;;;;;-1:-1:-1;;;854:61:12;;;;;;;;;;;;-1:-1:-1;;;854:61:12;;;;;;;;;;;;;;;922:16;941:5;;960:10;-1:-1:-1;;;;;;952:18:12;;;;;;;-1:-1:-1;976:25:12;;;;;;;1013:42;;-1:-1:-1;;;;;941:5:12;;;;960:10;;941:5;;1013:42;;;806:254;:::o;2010:42:8:-;;;:::o;1627:157:18:-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;1698:12:18::1;::::0;::::1;;1693:87;;1720:12;:19:::0;;-1:-1:-1;;1720:19:18::1;1735:4;1720:19;::::0;;1753:20:::1;::::0;::::1;::::0;1720:12:::1;::::0;1753:20:::1;1627:157::o:0;6226:143:5:-;6317:7;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;6341:23:5::1;:21;:23::i;1391:175:18:-:0;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;1469:17:18;::::1;;::::0;;;:10:::1;:17;::::0;;;;;::::1;;1465:97;;;-1:-1:-1::0;;;;;1496:17:18;::::1;1516:5;1496:17:::0;;;:10:::1;:17;::::0;;;;;;;;:25;;-1:-1:-1;;1496:25:18::1;::::0;;1535:20;;;;;;;::::1;::::0;;;;;;;;::::1;1465:97;1391:175:::0;:::o;21298:946:8:-;21407:22;;;;;;;;21642:10;21656:9;21642:23;21634:58;;;;;-1:-1:-1;;;21634:58:8;;;;;;;;;;;;-1:-1:-1;;;21634:58:8;;;;;;;;;;;;;;;21703:19;;;;21699:541;;21754:23;;;21732:19;21754:23;;;:6;:23;;;;;;;;21816:7;:24;;;;;;21865:50;21890:7;21761:15;21865:24;:50::i;:::-;-1:-1:-1;;;;;21950:16:8;;;;;;:7;:16;;;;;:33;;;;;21993:15;;;;22018;;;;22043:13;:23;21925:15;;-1:-1:-1;;;;;21993:15:8;;-1:-1:-1;;;22018:15:8;;;;;-1:-1:-1;;;;;22043:23:8;22076:13;:11;:13::i;:::-;22100:15;;;;-1:-1:-1;;;;;22100:15:8;:59;;22146:13;;-1:-1:-1;;;;;22146:13:8;22100:59;;;22122:21;;;;-1:-1:-1;;;22122:21:8;;-1:-1:-1;;;;;22122:21:8;22100:59;21848:320;;;;;;;;;;;;;;;;;;;;;;;;;21699:541;22196:37;22225:7;22196:28;:37::i;:::-;22189:44;;;;;;;;;;;;;;;;21699:541;21298:946;;;;;;;;;;;:::o;179:20:12:-;;;-1:-1:-1;;;;;179:20:12;;:::o;19438:393:8:-;19526:10;19491:6;19515:22;;;:10;:22;;;;;:33;;;19507:70;;;;;-1:-1:-1;;;19507:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;19601:16;;;;19584:14;19631:15;;;:6;:15;;;;;19601:16;19631:25;;-1:-1:-1;;;19631:25:8;;-1:-1:-1;;;;;19631:25:8;:29;;;:50;;;19664:17;19673:7;19664:8;:17::i;:::-;19623:94;;;;;-1:-1:-1;;;19623:94:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;19724:17;19744:14;:11;;;;;19756:1;;19744:11;:14;:::i;:::-;19724:34;;19764:39;19792:10;19764:27;:39::i;:::-;19809:17;;;-1:-1:-1;;19438:393:8;:::o;2829:280:5:-;2939:14;2961:13;2982:17;3007;3032:22;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;3076:28:5::1;3095:8;3076:18;:28::i;:::-;3069:35:::0;;;;-1:-1:-1;3069:35:5;;-1:-1:-1;3069:35:5;-1:-1:-1;3069:35:5;;-1:-1:-1;2829:280:5;-1:-1:-1;;2829:280:5:o;1112:170:18:-;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;1188:17:18;::::1;;::::0;;;:10:::1;:17;::::0;;;;;::::1;;1183:95;;-1:-1:-1::0;;;;;1215:17:18;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:24;;-1:-1:-1;;1215:24:18::1;1235:4;1215:24;::::0;;1253:18;;;;;;;::::1;::::0;;;;;;;;::::1;1112:170:::0;:::o;20886:181:8:-;20980:17;;20972:62;;;;;-1:-1:-1;;;20972:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21040:22;:20;:22::i;:::-;20886:181;;;;:::o;6843:154:5:-;6944:6;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;6967:25:5::1;6983:8;6967:15;:25::i;7504:161::-:0;7608:7;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;7632:28:5::1;7651:8;7632:18;:28::i;17821:362:8:-:0;1194:5:12;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;17946:13:8::1;:23:::0;18014:13:::1;::::0;-1:-1:-1;;;;;17946:23:8;;::::1;::::0;18033:7;;17984:45:::1;::::0;17998:30:::1;::::0;18014:13:::1;17998:15;:30::i;:::-;17984:9:::0;;:45:::1;:13;:45;:::i;:::-;:56;;17976:95;;;::::0;;-1:-1:-1;;;17976:95:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;18085:9;::::0;:39:::1;::::0;;-1:-1:-1;;;18085:39:8;;-1:-1:-1;;;;;18085:39:8;;::::1;;::::0;::::1;::::0;;;;;;;;;:9;;;::::1;::::0;:18:::1;::::0;:39;;;;;::::1;::::0;;;;;;;;:9:::1;::::0;:39;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;18085:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;18085:39:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;18085:39:8;18077:73:::1;;;::::0;;-1:-1:-1;;;18077:73:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;18077:73:8;;;;;;;;;;;;;::::1;;18156:22;:20;:22::i;1778:28::-:0;;;-1:-1:-1;;;;;1778:28:8;;:::o;1846:32::-;;;-1:-1:-1;;;1846:32:8;;;;;:::o;9616:113::-;9701:13;:23;-1:-1:-1;;;9701:23:8;;-1:-1:-1;;;;;9701:23:8;;9616:113::o;464:24:18:-;;;;;;:::o;16593:139:8:-;-1:-1:-1;;;;;16698:16:8;16674:7;16698:16;;;:7;:16;;;;;:29;-1:-1:-1;;;;;16698:29:8;;16593:139::o;18645:273::-;-1:-1:-1;;;;;18733:16:8;;;;;;;:7;:16;;;;;:22;;;;;;;18759:10;18733:36;18725:71;;;;;-1:-1:-1;;;18725:71:8;;;;;;;;;;;;-1:-1:-1;;;18725:71:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;18802:16:8;;;;;;;:7;:16;;;;;;;;;:29;;:41;;-1:-1:-1;;;;;;18802:41:8;;;;;;;;;18855:58;;18891:10;18855:58;;;;;;;;;;;18802:16;;18855:58;;;;;;;;;;;18645:273;;:::o;567:150:12:-;1194:5;;-1:-1:-1;;;;;1194:5:12;1180:10;:19;1172:54;;;;;-1:-1:-1;;;1172:54:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1172:54:12;;;;;;;;;;;;;;;644:12:::1;:18:::0;;-1:-1:-1;;;;;;644:18:12::1;-1:-1:-1::0;;;;;644:18:12;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;701:5:12;;674:38:::1;::::0;644:18;;701:5:::1;::::0;674:38:::1;::::0;-1:-1:-1;674:38:12::1;567:150:::0;:::o;4400:263:5:-;4498:14;4520:13;4541:17;4566;4591:22;2112:31:18;2122:10;2134:8;;2112:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2112:9:18;;-1:-1:-1;;;2112:31:18:i;:::-;2104:53;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;-1:-1:-1;;;2104:53:18;;;;;;;;;;;;;;;4635:23:5::1;:21;:23::i;:::-;4628:30;;;;;;;;;;4400:263:::0;;;;;:::o;30525:783:8:-;-1:-1:-1;;;;;30694:16:8;;30671:20;30694:16;;;:7;:16;;;;;:30;30744:16;;30622:12;;30694:30;-1:-1:-1;;;30694:30:8;;;;;;30744:16;30771:18;30767:51;;30791:27;;;;;;;;;;;;;-1:-1:-1;;;30791:27:8;;;;;;;;;30767:51;30844:8;30828:24;;:13;:24;;;30824:61;;;30854:31;;;;;;;;;;;;;-1:-1:-1;;;30854:31:8;;;;;;;;;30824:61;-1:-1:-1;;;;;30895:16:8;;;;;;:7;:16;;;;;:28;:39;;;;-1:-1:-1;;;30895:28:8;;;;:39;30891:78;;;30936:33;;;;;;;;;;;;;;;;;;;;;;;30891:78;-1:-1:-1;;;;;30979:16:8;;;;;;:7;:16;;;;;:34;:46;;;;-1:-1:-1;;;30979:34:8;;;;:46;30975:93;;31027:41;;;;;;;;;;;;;;;;;;;;;;;30975:93;31090:4;31078:16;;:8;:16;;;;:43;;;;-1:-1:-1;31110:11:8;:8;;;;;31119:1;;31110:8;:11;:::i;:::-;31098:23;;:8;:23;;;;31078:43;:92;;;;;31126:44;31155:8;31165:4;31126:28;:44::i;:::-;31125:45;31078:92;31074:130;;;31172:32;;;;;;;;;;;;;;;;;;;;;;;31074:130;31214:8;:13;;31226:1;31214:13;;:47;;;;-1:-1:-1;31232:29:8;31245:15;:12;;;;;31258:1;;31245:12;:15;:::i;:::-;31232:12;:29::i;:::-;31231:30;31214:47;31210:93;;;31263:40;;;;;;;;;;;;;;;;;;;;;;;31210:93;30525:783;;;;;;:::o;23217:359::-;23293:18;23302:8;23293;:18::i;:::-;23288:32;;23313:7;;23288:32;23355:10;23325:19;23347;;;:7;:19;;;;;:36;23442:12;;23347:36;-1:-1:-1;;;23347:36:8;;;;;;-1:-1:-1;;;23442:12:8;;;;;23428:26;;23416:38;;;;;;;:58;;-1:-1:-1;23458:16:8;;;23416:58;23412:71;;;23476:7;;;23412:71;23489:28;23508:8;23489:18;:28::i;:::-;-1:-1:-1;23532:10:8;23524:19;;;;:7;:19;;;;;:47;;;;;-1:-1:-1;;;23524:47:8;-1:-1:-1;;;;;23524:47:8;;;;;;23217:359;:::o;27877:391::-;27968:30;27989:8;27968:20;:30::i;:::-;27960:74;;;;;-1:-1:-1;;;27960:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;28041:17;;;;;;;:7;:17;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;28041:47:8;;;;;;;;;;28102:10;28094:19;;;:7;:19;;;;;;:48;;-1:-1:-1;;;;28094:48:8;-1:-1:-1;;;28094:48:8;;;;;28148:36;:50;;;28210:53;28102:10;;28041:17;:47;;28210:53;;28041:17;28210:53;27877:391;;:::o;26256:545::-;26391:17;;;;26326:4;26391:17;;;:7;:17;;;;;:32;;;;26352:36;;26326:4;;;;-1:-1:-1;;;26391:32:8;;;;-1:-1:-1;26348:109:8;;;-1:-1:-1;26441:5:8;;-1:-1:-1;26441:5:8;26433:17;;26348:109;26506:17;;;26463:16;26506:17;;;:7;:17;;;;;;;;26482:54;;;;;;;;;;;;;;;;;;;;;26506:17;26482:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;:54::i;:::-;26542:16;;;;;;;:6;:16;;;;;;;;;:35;;;26583:26;;:52;;-1:-1:-1;;;;26583:52:8;-1:-1:-1;;;26619:15:8;-1:-1:-1;;;;;26583:52:8;;;;;;;;;;-1:-1:-1;;;;26641:43:8;-1:-1:-1;;;26641:43:8;;;;;;26690:13;:24;;-1:-1:-1;;26690:24:8;-1:-1:-1;;;26690:24:8;;;;;26726:39;;;;;;;26542:35;;-1:-1:-1;26542:16:8;;:35;;26726:39;;;;;;;;26780:4;;-1:-1:-1;26786:9:8;-1:-1:-1;26256:545:8;;;;:::o;27456:417::-;27530:17;;;27512:15;27530:17;;;:7;:17;;;;;:31;;;-1:-1:-1;;;27530:31:8;;-1:-1:-1;;;;;27530:31:8;27567:18;;:::i;:::-;-1:-1:-1;27567:34:8;;;;;;;;;27588:13;27567:34;-1:-1:-1;;;;;27567:34:8;;;;;;-1:-1:-1;;;27567:34:8;;;;;;;;27625:28;;27645:7;27625:28;:19;:28;:::i;:::-;-1:-1:-1;;;;;27607:46:8;;;;;27677:15;;;;:28;;:19;27697:7;27677:28;:19;:28;:::i;:::-;-1:-1:-1;;;;;27659:46:8;;;:15;;;;:46;;;27711:21;;:13;:21;;-1:-1:-1;;;27711:21:8;;;;;;-1:-1:-1;;;;;;27711:21:8;;;;;;;;;;;;;27781:10;27711:21;27773:19;;;:7;:19;;;;;;:32;:45;;:32;27810:7;27773:45;:36;:45;:::i;:::-;27746:10;27738:19;;;;:7;:19;;;;;;:80;;-1:-1:-1;;;;;;27738:80:8;-1:-1:-1;;;;;27738:80:8;;;;;;27852:15;;27830:38;;;;;;;27738:19;27830:38;27456:417;;;:::o;28272:184::-;28380:17;;;;;;;;:7;:17;;;;;:32;;;;28341:36;;28380:32;;-1:-1:-1;28337:84:8;;;28414:7;;28337:84;28434:17;;;;;;;:7;:17;;;;;;28427:24;28434:17;;28427:24;:::i;:::-;-1:-1:-1;28427:24:8;;;;-1:-1:-1;;;;;;28427:24:8;;;28272:184;:::o;26805:647::-;26931:9;;-1:-1:-1;;;;;26931:9:8;26973:25;26969:38;;27000:7;;;26969:38;27013:16;27032:15;:12;;;;;27045:1;;27032:12;:15;:::i;:::-;27080:17;;;;27053:24;27080:17;;;:6;:17;;;;;;;;:33;;;;27144:24;;27311:125;;-1:-1:-1;;;27311:125:8;;-1:-1:-1;;;27080:33:8;;;;;27311:125;;;;;;;;;;;;;;;;;;;;;;;;;;;27013:34;;-1:-1:-1;27080:33:8;;27144:24;;-1:-1:-1;;;;;27311:11:8;;;;;2709:6;;27311:125;;;;;27080:17;;27311:125;;;;;;;;;:11;:125;;;2:2:-1;;;;27:1;24;17:12;2:2;27311:125:8;;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;27311:125:8;;;27307:141;;;;;;;26805:647;;;;;;:::o;29216:151::-;29292:7;29316:46;2560:1;29316:26;29328:13;:11;:13::i;:::-;29316:7;;:26;;;:11;:26;:::i;:::-;:30;:46;:30;:46;:::i;30043:478::-;30118:22;30132:7;30118:13;:22::i;:::-;30110:53;;;;;-1:-1:-1;;;30110:53:8;;;;;;;;;;;;-1:-1:-1;;;30110:53:8;;;;;;;;;;;;;;;30201:16;;:23;;:16;;;;;30222:1;;30201:20;:23;:::i;:::-;-1:-1:-1;;;;;30170:16:8;;;;;;:7;:16;;;;;:54;;;;;;;-1:-1:-1;;;30170:54:8;-1:-1:-1;;;;30170:54:8;;;;;;;;;;30245:15;30261:29;-1:-1:-1;30269:13:8;:11;:13::i;:::-;30261:22;;;:29;:26;:29;:::i;:::-;30245:46;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;30312:16:8;;;;;;:7;:16;;;;;;;:22;;;;;;30245:46;;;;30340:13;;;;;;:19;:27;;30312:22;;;;-1:-1:-1;;30340:27:8;;;;;;;;30380:16;;;;30373:29;;;;;30408:15;:22;;30245:46;;-1:-1:-1;30312:22:8;;30245:46;;30408:15;30312:22;;30408;;;;;;;;;;;;;;:29;;;;;-1:-1:-1;;;;;30408:29:8;;;;;-1:-1:-1;;;;;30408:29:8;;;;;;30443:15;:21;;;;;;;;;;;;;;;;-1:-1:-1;;30443:21:8;;;;;-1:-1:-1;;;;;;30443:21:8;;;;;;;;;30476:40;;-1:-1:-1;;;;;30476:40:8;;;;;30443:21;;30476:40;30043:478;;;:::o;863:162:29:-;921:7;948:5;;;967:6;;;;959:46;;;;;-1:-1:-1;;;959:46:29;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;959:46:29;;;;;;;;;;;;;;29371:668:8;29464:22;29478:7;29464:13;:22::i;:::-;29463:23;29455:58;;;;;-1:-1:-1;;;29455:58:8;;;;;;;;;;;;-1:-1:-1;;;29455:58:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;29528:20:8;;29520:54;;;;;-1:-1:-1;;;29520:54:8;;;;;;;;;;;;-1:-1:-1;;;29520:54:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;29588:16:8;;;29622:1;29588:16;;;:7;:16;;;;;:22;;;;;;;:36;;:72;;-1:-1:-1;;;;;;29628:16:8;;;;;;;:7;:16;;;;;:22;;;;;;;;:32;;;;29588:72;29580:113;;;;;-1:-1:-1;;;29580:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;29733:25;29750:7;29733:16;:25::i;:::-;-1:-1:-1;;;;;29700:16:8;;;;;;;:7;:16;;;;;;:58;;-1:-1:-1;;;;29700:58:8;;;;;-1:-1:-1;;;29700:58:8;-1:-1:-1;;;;29700:58:8;;;;29764:40;;;;-1:-1:-1;;;29764:40:8;;;29842:15;:22;;29810;;;;:55;;;;;;-1:-1:-1;;29810:55:8;;;;;;;;;27:10:-1;;-1:-1;23:18;;;45:23;;;29871:29:8;;;;-1:-1:-1;;;;;;29871:29:8;;;;;29906:16;;;:31;;;;;;;-1:-1:-1;;;;;;29906:31:8;;;;;;;;;;29949:39;;-1:-1:-1;;29700:16:8;;29949:39;;29700:16;29949:39;30027:6;-1:-1:-1;;;;;29999:35:8;30018:7;-1:-1:-1;;;;;29999:35:8;;;;;;;;;;;29371:668;;:::o;1382:165:13:-;1440:7;1468:1;-1:-1:-1;;;;;1463:6:13;:1;-1:-1:-1;;;;;1463:6:13;;;1455:49;;;;;-1:-1:-1;;;1455:49:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1522:5:13;;;1382:165::o;1277::29:-;1335:7;1363:1;1358;:6;;1350:49;;;;;-1:-1:-1;;;1350:49:29;;;;;;;;;;;;;;;;;;;;;;;;;;;11044:138:8;11156:13;;-1:-1:-1;;;11156:13:8;;;;11126:6;11149:21;;;:6;:21;;;;;:28;;11044:138::o;12061:123::-;12166:13;;-1:-1:-1;;;12166:13:8;;;;;12061:123::o;833:178:18:-;-1:-1:-1;;;;;972:17:18;;951:4;972:17;;;:10;:17;;;;;;;;;:34;;-1:-1:-1;;994:12:18;;;;993:13;;833:178;-1:-1:-1;;833:178:18:o;11551:145:8:-;11667:13;;-1:-1:-1;;;11667:13:8;;;;11636:7;11660:21;;;:6;:21;;;;;:31;;;-1:-1:-1;;;11660:31:8;;-1:-1:-1;;;;;11660:31:8;;11551:145::o;24348:422::-;24485:23;;;24457:14;24485:23;;;:6;:23;;;;;:33;;;-1:-1:-1;;;;;24485:33:8;:37;24481:285;;24539:37;24560:15;24539:20;:37::i;:::-;:98;;;;;24580:45;24600:7;24609:15;24580:19;:45::i;:::-;:52;:57;24539:98;24532:105;;;;24481:285;24665:33;24673:7;24682:15;24665:7;:33::i;24774:1478::-;-1:-1:-1;;;;;25164:16:8;;24870:22;25164:16;;;:7;25119:9;25164:16;25119:9;25164:16;;25238;;25210:24;;24870:22;;;;;;;;;;;;;;25119:9;;25164:16;;24870:22;;25119:9;25238:16;;;-1:-1:-1;;;25210:24:8;;;;:44;;:87;;-1:-1:-1;25280:16:8;;25259:38;;25280:16;;25259:20;:38::i;:::-;25258:39;25210:87;25517:16;;25187:110;;-1:-1:-1;25504:30:8;;25517:16;;25504:12;:30::i;:::-;:49;;;;;25538:15;25504:49;25500:424;;;25574:16;;:23;;:16;;;;;25595:1;;25574:20;:23;:::i;:::-;25613:16;;;;;;;:6;:16;;;;;25655:13;;25563:34;;-1:-1:-1;;;;;;25655:13:8;;;;-1:-1:-1;25613:16:8;-1:-1:-1;25696:26:8;25704:7;25563:34;25696:7;:26::i;:::-;25676:46;;25500:424;;;25754:16;;;;;25786;;;:6;:16;;;;;;;;25828:7;:17;;;;;;25754:16;25828:31;;25754:16;;-1:-1:-1;;;;25828:31:8;;;-1:-1:-1;;;;;25828:31:8;;-1:-1:-1;25786:16:8;-1:-1:-1;25887:30:8;25754:16;25887:20;:30::i;:::-;25867:50;;25500:424;25934:38;25954:7;25963:8;25934:19;:38::i;:::-;:45;:50;25930:96;;26014:5;25994:25;;25930:96;26088:23;;;;;26119:15;;;;26142:17;;;;26119:15;26142:17;;;:7;:17;;;;;:25;;;;26175:13;:23;26047:17;;26072:8;;26088:23;-1:-1:-1;;;;;26119:15:8;;-1:-1:-1;;;26142:25:8;;;;-1:-1:-1;;;;;26175:23:8;26206:13;:11;:13::i;:::-;26227:14;26032:215;;;;;;;;;;;;;;;;;;;;;;;;24774:1478;;;;;;;;;:::o;28460:281::-;28562:16;;;;28529:4;28562:16;;;:6;:16;;;;;;;;:26;;;;;28616:7;:17;;;;;;:25;;28529:4;;-1:-1:-1;;;;;28562:26:8;;;;-1:-1:-1;;;28616:25:8;;;28654:13;;;;;:33;;;28686:1;28671:12;:16;;;28654:33;:82;;;;-1:-1:-1;28721:15:8;28691:27;-1:-1:-1;;;;;28691:13:8;;:27;;;;;:13;:27;:::i;:::-;-1:-1:-1;;;;;28691:45:8;;28654:82;28647:89;28460:281;-1:-1:-1;;;;28460:281:8:o;966:158:14:-;1022:6;1047:5;;;1066:6;;;;;;;;;1058:46;;;;;-1:-1:-1;;;1058:46:14;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1058:46:14;;;;;;;;;;;;;;23580:403:8;23659:18;23668:8;23659;:18::i;:::-;23654:32;;23679:7;;23654:32;23724:10;23691:19;23713:22;;;:10;:22;;;;;:39;;;;;;;;;23814:28;;;;23800:42;;23789:53;;;;;:73;;-1:-1:-1;23846:16:8;;23789:73;23781:105;;;;;-1:-1:-1;;;23781:105:8;;;;;;;;;;;;-1:-1:-1;;;23781:105:8;;;;;;;;;;;;;;;23893:28;23912:8;23893:18;:28::i;:::-;-1:-1:-1;23939:10:8;23928:22;;;;:10;:22;;;;;:50;;;;;;;-1:-1:-1;;23928:50:8;;;;;;23580:403;:::o;14500:476::-;14604:14;14626:13;14647:17;14672;14697:22;14734:14;;:::i;:::-;-1:-1:-1;14751:24:8;;;;;;;;:6;:24;;;;;;;;;14734:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14734:41:8;;;;;;;;;;-1:-1:-1;;;14734:41:8;;;;;;;;;;;;-1:-1:-1;;;14734:41:8;;;;;;;;;;;14790:21;;;;:47;;;14815:22;14828:8;14815:22;;:12;:22::i;:::-;14839:16;;;;;;;;;;;;;-1:-1:-1;;;14839:16:8;;;14782:74;;;;;-1:-1:-1;;;14782:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;14782:74:8;-1:-1:-1;14894:8:8;;14910:11;;;;14929;;;;14948:17;;;;;14878:8;;14894;;-1:-1:-1;;;;;14863:108:8;;;;-1:-1:-1;14863:108:8;;;-1:-1:-1;14863:108:8;;;;;-1:-1:-1;14500:476:8;-1:-1:-1;;14500:476:8:o;12595:210::-;12690:6;12710:22;12723:8;12710:12;:22::i;:::-;12706:81;;;-1:-1:-1;12749:24:8;;;;;;;:6;:24;;;;;:31;12742:38;;12706:81;-1:-1:-1;12799:1:8;12595:210;;;:::o;13249:217::-;13347:7;13368:22;13381:8;13368:12;:22::i;:::-;13364:84;;;-1:-1:-1;13407:24:8;;;;;;;:6;:24;;;;;:34;;;-1:-1:-1;;;13407:34:8;;-1:-1:-1;;;;;13407:34:8;13400:41;;16241:261;16333:14;16355:13;16376:17;16401;16426:22;16470:27;16483:13;;;;;;;;;;;16470:27;;:12;:27::i;29027:185::-;29130:4;29170:5;29151:24;;:15;29164:1;29151:8;:12;;;;:15;;;;:::i;:::-;:24;;;:56;;;;-1:-1:-1;;29179:13:8;;;;;;:6;:13;;;;;:23;;;-1:-1:-1;;;29179:23:8;;-1:-1:-1;;;;;29179:23:8;:28;;29027:185;-1:-1:-1;29027:185:8:o;1376:161:14:-;1432:6;1459:1;1454:6;;:1;:6;;;;1446:49;;;;;-1:-1:-1;;;1446:49:14;;;;;;;;;;;;;;;;;;;;;;;;;;;31312:151:8;31406:16;;;31385:4;31406:16;;;:6;:16;;;;;:26;;;-1:-1:-1;;;31406:26:8;;-1:-1:-1;;;;;31406:26:8;:30;;;:52;;;31440:18;31449:8;31440;:18::i;31993:130::-;32095:16;;32062:4;;32095:23;;:16;;;;;32116:1;;32095:20;:23;:::i;:::-;32083:35;;:8;:35;;;32076:42;;31993:130;;;:::o;22735:478::-;22800:40;22824:15;:12;;;;;22837:1;;22824:12;:15;:::i;:::-;22800:23;:40::i;:::-;22847:16;:27;;-1:-1:-1;;22847:27:8;;;;;;;22880:31;;:::i;:::-;-1:-1:-1;22914:129:8;;;-1:-1:-1;22914:129:8;;;22934:15;;;;;;;;22914:129;;22957:18;;;-1:-1:-1;;;22957:18:8;;;;22914:129;;;;;;;;-1:-1:-1;;;22983:18:8;;;;22914:129;;;;-1:-1:-1;;;23009:7:8;;;;-1:-1:-1;;;22914:129:8;-1:-1:-1;;;;;23024:13:8;;;22914:129;;;;23049:17;;;;:7;:17;;;;;:31;;;;22914:129;;;;23049:31;;:17;;:31;;;:::i;:::-;-1:-1:-1;23049:31:8;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23049:31:8;;;;;;;;-1:-1:-1;;23049:31:8;-1:-1:-1;;;23049:31:8;;;;;;;;-1:-1:-1;;23049:31:8;-1:-1:-1;;;23049:31:8;;;;;;;;;;;-1:-1:-1;;;;23049:31:8;-1:-1:-1;;;;;;;;23049:31:8;;;;;;;;;;23086:16;;-1:-1:-1;23086:16:8;;;:6;:16;;;;;:26;;;:52;;-1:-1:-1;;23086:52:8;23122:15;-1:-1:-1;;;;;23086:52:8;;;;;;;;;;;23150:58;;23181:26;;23150:58;;;;23169:10;;23150:58;;;;;;;;;22735:478;;:::o;31612:144::-;31714:17;;;;31693:4;31714:17;;;:7;:17;;;;;:32;;;;:37;;;31612:144::o;856:506:10:-;939:6;967:4;:11;963:1;:15;955:50;;;;;-1:-1:-1;;;955:50:10;;;;;;;;;;;;-1:-1:-1;;;955:50:10;;;;;;;;;;;;;;;1025:11;;1070:1;1064:7;;1081;;;1077:281;;1103:14;1125;1168:62;1183:4;1189:1;1198;1192:3;:7;1215:1;1201:11;:15;1218:11;1168:14;:62::i;:::-;1147:83;;-1:-1:-1;1147:83:10;-1:-1:-1;1245:36:10;1147:83;;1245:18;:36::i;:::-;1238:43;;;;;;;;1077:281;1309:42;1321:4;1327:1;1336;1330:3;:7;1339:11;1309;:42::i;:::-;1302:49;;;;;;968:162:13;1026:7;1053:5;;;-1:-1:-1;;;;;1072:6:13;;;;;;;;1064:46;;;;;-1:-1:-1;;;1064:46:13;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1064:46:13;;;;;;;;;;;;;;1670:418:29;1728:7;1952:6;1948:35;;-1:-1:-1;1975:1:29;1968:8;;1948:35;2001:5;;;2005:1;2001;:5;:1;2020:5;;;;;:10;2012:56;;;;-1:-1:-1;;;2012:56:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31467:141:8;-1:-1:-1;;;;;31562:16:8;31541:4;31562:16;;;:7;:16;;;;;:28;2651:7;-1:-1:-1;;;31562:28:8;;;;;:41;;31467:141::o;28745:278::-;28860:16;;28822:6;;28860:16;;28886:17;;;;;:65;;-1:-1:-1;;;;;;28923:16:8;;;;;;:7;:16;;;;;:28;;28907:44;;;-1:-1:-1;;;28923:28:8;;;;28907:44;28886:65;28882:105;;;28968:12;-1:-1:-1;28961:19:8;;28882:105;28999:19;:16;;;;;29016:1;;28999:16;:19;:::i;:::-;28992:26;28745:278;-1:-1:-1;;;28745:278:8:o;31760:229::-;-1:-1:-1;;;;;31881:16:8;;31845:4;31881:16;;;:7;:16;;;;;:33;31952:12;;31881:33;-1:-1:-1;;;31881:33:8;;;;;;-1:-1:-1;;;31952:12:8;;;;;31938:26;;31927:37;;;;;:57;;-1:-1:-1;31968:16:8;;31920:64;-1:-1:-1;;;31760:229:8:o;966:158:15:-;1022:6;1047:5;;;-1:-1:-1;;;;;1066:6:15;;;;;;;;1058:46;;;;;-1:-1:-1;;;1058:46:15;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1058:46:15;;;;;;;;;;;;;;32127:121:8;2651:7;-1:-1:-1;32222:21:8;;32127:121::o;23987:357::-;24062:18;24071:8;24062;:18::i;:::-;24057:32;;24082:7;;24057:32;24095:13;24111:15;:12;;;;;24124:1;;24111:12;:15;:::i;:::-;24158:14;;;;;;;;:6;:14;;;;;;;;:21;;24132:16;;;;;;;;:47;;;24220:30;;;;;24185:32;;:65;;-1:-1:-1;;;;24185:65:8;-1:-1:-1;;;24220:30:8;;;;;;;24185:65;;;;;;;-1:-1:-1;;;;24256:52:8;-1:-1:-1;;;24292:15:8;-1:-1:-1;;;;;24256:52:8;;;;;;24322:7;:17;;;;;24158:14;;-1:-1:-1;24315:24:8;24322:17;24158:14;24315:24;:::i;:::-;-1:-1:-1;24315:24:8;;;;-1:-1:-1;;;;;;24315:24:8;;;-1:-1:-1;23987:357:8;:::o;4922:800:10:-;5090:11;5103;5137:2;5132;:7;5124:16;;12:1:-1;9;2:12;5124:16:10;5160:2;5154;:8;;:20;;;;;5172:2;5166;:8;;5154:20;5146:29;;12:1:-1;9;2:12;5146:29:10;5195:2;5189;:8;;:20;;;;;5207:2;5201;:8;;5189:20;5181:29;;12:1:-1;9;2:12;5181:29:10;1490:1;5247:2;5242;:7;:35;5238:103;;;5296:36;5311:4;5317:2;5321;5325;5329;5296:14;:36::i;:::-;5289:43;;;;;;5238:103;5348:16;5367:23;5377:4;5383:2;5387;5367:9;:23::i;:::-;5348:42;;5408:8;5402:2;:14;5398:314;;5433:8;5428:13;;5398:314;;;5471:2;5460:8;:13;5456:256;;;5490:8;5501:1;5490:12;5485:17;;5456:256;;;5540:8;5534:2;:14;;:31;;;;;5563:2;5552:8;:13;5534:31;5527:39;;;;5583:35;5595:4;5601:2;5605:8;5615:2;5583:11;:35::i;:::-;5576:42;;5635:39;5647:4;5653:8;5664:1;5653:12;5667:2;5671;5635:11;:39::i;:::-;5628:46;-1:-1:-1;5684:19:10;;-1:-1:-1;5684:19:10;5456:256;5217:501;;;;4922:800;;;;;;;;:::o;1860:267:16:-;1930:6;1956:1;1951:2;:6;:16;;;;;1966:1;1961:2;:6;1951:16;1950:40;;;;1978:1;1973:2;:6;:16;;;;;1988:1;1983:2;:6;1973:16;1946:83;;;2021:1;2007:11;2011:2;2015;2007:3;:11::i;:::-;:15;;;;;;2000:22;;;;1946:83;2034:16;2073:1;2054:6;;;2063;;;2054:15;2053:21;;-1:-1:-1;2087:35:16;2091:19;2100:1;2095:2;:6;2108:1;2103:2;:6;2091:3;:19::i;:::-;2112:9;2087:3;:35::i;3981:773:10:-;4093:10;4127:1;4121:2;:7;;4113:16;;12:1:-1;9;2:12;4113:16:10;4148:2;4143:1;:7;;4135:16;;12:1:-1;9;2:12;4135:16:10;4169:2;4164;:7;4157:572;;;1490:1;4190:2;4185;:7;:35;4181:153;;;4232:13;4271:34;4286:4;4292:2;4296;4300:1;4303;4271:14;:34::i;:::-;-1:-1:-1;4255:50:10;-1:-1:-1;4315:10:10;;-1:-1:-1;4315:10:10;4181:153;4341:18;4362:23;4372:4;4378:2;4382;4362:9;:23::i;:::-;4341:44;;4402:10;4397:1;:15;4393:330;;4544:10;4539:15;;4393:330;;;4700:10;4713:1;4700:14;4695:19;;4393:330;4157:572;;;;4741:4;4746:2;4741:8;;;;;;;;;;;;;;4734:15;;3981:773;;;;;;:::o;1628:2197::-;1780:11;1793;2046;2069:2;2060;2065:1;2060:6;:11;2046:25;;2077:9;2089:4;2094:2;2099:1;2094:6;2089:12;;;;;;;;;;;;;;2077:24;;2107:9;2123:3;2119:1;:7;:32;;-1:-1:-1;;;;;2119:32:10;;;2129:4;2134:2;2139:1;2134:6;2129:12;;;;;;;;;;;;;;2119:32;2107:44;;2157:9;2173:3;2169:1;:7;:32;;-1:-1:-1;;;;;2169:32:10;;;2179:4;2184:2;2189:1;2184:6;2179:12;;;;;;;;;;;;;;2169:32;2157:44;;2207:9;2223:3;2219:1;:7;:32;;-1:-1:-1;;;;;2219:32:10;;;2229:4;2234:2;2239:1;2234:6;2229:12;;;;;;;;;;;;;;2219:32;2207:44;;2257:9;2273:3;2269:1;:7;:32;;-1:-1:-1;;;;;2269:32:10;;;2279:4;2284:2;2289:1;2284:6;2279:12;;;;;;;;;;;;;;2269:32;2257:44;;2307:9;2323:3;2319:1;:7;:32;;-1:-1:-1;;;;;2319:32:10;;;2329:4;2334:2;2339:1;2334:6;2329:12;;;;;;;;;;;;;;2319:32;2307:44;;2357:9;2373:3;2369:1;:7;:32;;-1:-1:-1;;;;;2369:32:10;;;2379:4;2384:2;2389:1;2384:6;2379:12;;;;;;;;;;;;;;2369:32;2357:44;;2417:2;2412;:7;2408:35;;;2434:2;;2438;2408:35;2457:2;2452;:7;2448:35;;;2474:2;;2478;2448:35;2497:2;2492;:7;2488:35;;;2514:2;;2518;2488:35;2537:2;2532;:7;2528:35;;;2554:2;;2558;2528:35;2577:2;2572;:7;2568:35;;;2594:2;;2598;2568:35;2617:2;2612;:7;2608:35;;;2634:2;2608:35;2657:2;2652;:7;2648:35;;;2674:2;;2678;2648:35;2697:2;2692;:7;2688:35;;;2714:2;2688:35;2737:2;2732;:7;2728:35;;;2754:2;;2758;2728:35;2777:2;2772;:7;2768:35;;;2794:2;;2798;2768:35;2817:2;2812;:7;2808:35;;;2834:2;2808:35;2857:2;2852;:7;2848:35;;;2874:2;;2878;2848:35;2897:2;2892;:7;2888:35;;;2914:2;2888:35;2937:2;2932;:7;2928:35;;;2954:2;;2958;2928:35;2977:2;2972;:7;2968:35;;;2994:2;;2998;2968:35;3017:2;3012;:7;3008:35;;;3034:2;;3038;3008:35;3066:7;;;3083:11;3079:302;;3104:2;3097:9;;3079:302;;;3122:6;3132:1;3122:11;3118:263;;;3143:2;3136:9;;3118:263;;;3161:6;3171:1;3161:11;3157:224;;;3182:2;3175:9;;3157:224;;;3200:6;3210:1;3200:11;3196:185;;;3221:2;3214:9;;3196:185;;;3239:6;3249:1;3239:11;3235:146;;;3260:2;3253:9;;3235:146;;;3278:6;3288:1;3278:11;3274:107;;;3299:2;3292:9;;3274:107;;;3317:6;3327:1;3317:11;3313:68;;;3338:2;3331:9;;3313:68;;;3353:26;;;-1:-1:-1;;;3353:26:10;;;;;;;;;;;;-1:-1:-1;;;3353:26:10;;;;;;;;;;;;;;3313:68;3404:7;;;3421:8;;;3417:404;;;-1:-1:-1;3440:4:10;;-1:-1:-1;3432:19:10;;-1:-1:-1;;;;;;;;;3432:19:10;3417:404;3467:11;3463:358;;-1:-1:-1;3495:2:10;;-1:-1:-1;3481:17:10;;-1:-1:-1;;;;;;;;3481:17:10;3463:358;3514:6;3524:1;3514:11;3510:311;;;-1:-1:-1;3542:2:10;;-1:-1:-1;3528:17:10;;-1:-1:-1;;;;;;;;3528:17:10;3510:311;3561:6;3571:1;3561:11;3557:264;;;-1:-1:-1;3589:2:10;;-1:-1:-1;3575:17:10;;-1:-1:-1;;;;;;;;3575:17:10;3557:264;3608:6;3618:1;3608:11;3604:217;;;-1:-1:-1;3636:2:10;;-1:-1:-1;3622:17:10;;-1:-1:-1;;;;;;;;3622:17:10;3604:217;3655:6;3665:1;3655:11;3651:170;;;-1:-1:-1;3683:2:10;;-1:-1:-1;3669:17:10;;-1:-1:-1;;;;;;;;3669:17:10;3651:170;3702:6;3712:1;3702:11;3698:123;;;-1:-1:-1;3730:2:10;;-1:-1:-1;3716:17:10;;-1:-1:-1;;;;;;;;3716:17:10;3698:123;3749:6;3759:1;3749:11;3745:76;;;-1:-1:-1;3777:2:10;;-1:-1:-1;3763:17:10;;-1:-1:-1;;;;;;;;3763:17:10;3745:76;3793:26;;;-1:-1:-1;;;3793:26:10;;;;;;;;;;;;-1:-1:-1;;;3793:26:10;;;;;;;;;;;;;;6044:1223;6143:7;;6311:4;6328:1;6317:7;;;6316:13;6311:19;;;;;;;;;;;;;;6296:34;;6342:1;6336:7;;;;6398:1;6392:7;;;;6405:858;6445:1;6439:7;;;;6474:5;6463:4;6468:2;6463:8;;;;;;;;;;;;;;:16;6426:55;;6488;6507:1;6501:7;;;;6536:5;6525:4;6530:2;6525:8;;;;;;;;;;;;;;:16;6488:55;;6559:2;6554;:7;6550:707;;;6597:4;6602:2;6597:8;;;;;;;;;;;;;;6607:4;6612:2;6607:8;;;;;;;;;;;;;;6574:4;6579:2;6574:8;;;;;;;;;;;;;6584:4;6589:2;6584:8;;;;;;;;;;;;;;;;;6573:43;;;;;6550:707;;;7246:2;7239:9;;;;;6550:707;6405:858;;1435:196:16;1491:6;1516:5;;;1536:6;;;;;;:16;;;1551:1;1546;:6;;1536:16;1535:38;;;;1562:1;1558;:5;:14;;;;;1571:1;1567;:5;1558:14;1527:84;;;;-1:-1:-1;;;1527:84:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;332:7336:5;;;;;;;;;;-1:-1:-1;332:7336:5;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;332:7336:5;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;332:7336:5;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;332:7336:5;;;-1:-1:-1;332:7336:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.6;\n\nimport \"./FluxAggregator.sol\";\nimport \"./SimpleReadAccessController.sol\";\n\n/**\n * @title AccessControlled FluxAggregator contract\n * @notice This contract requires addresses to be added to a controller\n * in order to read the answers stored in the FluxAggregator contract\n */\ncontract AccessControlledAggregator is FluxAggregator, SimpleReadAccessController {\n\n  /**\n   * @notice set up the aggregator with initial configuration\n   * @param _link The address of the LINK token\n   * @param _paymentAmount The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)\n   * @param _timeout is the number of seconds after the previous round that are\n   * allowed to lapse before allowing an oracle to skip an unfinished round\n   * @param _validator is an optional contract address for validating\n   * external validation of answers\n   * @param _minSubmissionValue is an immutable check for a lower bound of what\n   * submission values are accepted from an oracle\n   * @param _maxSubmissionValue is an immutable check for an upper bound of what\n   * submission values are accepted from an oracle\n   * @param _decimals represents the number of decimals to offset the answer by\n   * @param _description a short description of what is being reported\n   */\n  constructor(\n    address _link,\n    uint128 _paymentAmount,\n    uint32 _timeout,\n    address _validator,\n    int256 _minSubmissionValue,\n    int256 _maxSubmissionValue,\n    uint8 _decimals,\n    string memory _description\n  ) public FluxAggregator(\n    _link,\n    _paymentAmount,\n    _timeout,\n    _validator,\n    _minSubmissionValue,\n    _maxSubmissionValue,\n    _decimals,\n    _description\n  ){}\n\n  /**\n   * @notice get data about a round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * @param _roundId the round ID to retrieve the round data for\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started. This is 0\n   * if the round hasn't been started yet.\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed. answeredInRound may be smaller than roundId when the round\n   * timed out. answerInRound is equal to roundId when the round didn't time out\n   * and was completed regularly.\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @dev Note that for in-progress rounds (i.e. rounds that haven't yet\n   * received maxSubmissions) answer and updatedAt may change between queries.\n   */\n  function getRoundData(uint80 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.getRoundData(_roundId);\n  }\n\n  /**\n   * @notice get data about the latest round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values. Consumers are encouraged to\n   * use this more fully featured method over the \"legacy\" latestAnswer\n   * functions. Consumers are encouraged to check that they're receiving fresh\n   * data by inspecting the updatedAt and answeredInRound return values.\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started. This is 0\n   * if the round hasn't been started yet.\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed. answeredInRound may be smaller than roundId when the round\n   * timed out. answerInRound is equal to roundId when the round didn't time out\n   * and was completed regularly.\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @dev Note that for in-progress rounds (i.e. rounds that haven't yet\n   * received maxSubmissions) answer and updatedAt may change between queries.\n   */\n  function latestRoundData()\n    public\n    view\n    override\n    checkAccess()\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.latestRoundData();\n  }\n\n  /**\n   * @notice get the most recently reported answer\n   * @dev overridden funcion to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestAnswer()\n    public\n    view\n    override\n    checkAccess()\n    returns (int256)\n  {\n    return super.latestAnswer();\n  }\n\n  /**\n   * @notice get the most recently reported round ID\n   * @dev overridden funcion to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestRound()\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.latestRound();\n  }\n\n  /**\n   * @notice get the most recent updated at timestamp\n   * @dev overridden funcion to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestTimestamp()\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.latestTimestamp();\n  }\n\n  /**\n   * @notice get past rounds answers\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @param _roundId the round number to retrieve the answer for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getAnswer(uint256 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (int256)\n  {\n    return super.getAnswer(_roundId);\n  }\n\n  /**\n   * @notice get timestamp when an answer was last updated\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @param _roundId the round number to retrieve the updated timestamp for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getTimestamp(uint256 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.getTimestamp(_roundId);\n  }\n\n}\n",
  "sourcePath": "@chainlink/contracts/src/v0.6/AccessControlledAggregator.sol",
  "ast": {
    "absolutePath": "@chainlink/contracts/src/v0.6/AccessControlledAggregator.sol",
    "exportedSymbols": {
      "AccessControlledAggregator": [
        212
      ]
    },
    "id": 213,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 50,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:5"
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.6/FluxAggregator.sol",
        "file": "./FluxAggregator.sol",
        "id": 51,
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 3413,
        "src": "56:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.6/SimpleReadAccessController.sol",
        "file": "./SimpleReadAccessController.sol",
        "id": 52,
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 5697,
        "src": "87:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "FluxAggregator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3412,
              "src": "371:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FluxAggregator_$3412",
                "typeString": "contract FluxAggregator"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "371:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 56,
              "name": "SimpleReadAccessController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5696,
              "src": "387:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleReadAccessController_$5696",
                "typeString": "contract SimpleReadAccessController"
              }
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "387:26:5"
          }
        ],
        "contractDependencies": [
          3412,
          5009,
          5696,
          5850,
          5862,
          5910,
          5919,
          5965
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 53,
          "nodeType": "StructuredDocumentation",
          "src": "131:200:5",
          "text": "@title AccessControlled FluxAggregator contract\n@notice This contract requires addresses to be added to a controller\nin order to read the answers stored in the FluxAggregator contract"
        },
        "fullyImplemented": true,
        "id": 212,
        "linearizedBaseContracts": [
          212,
          5696,
          5850,
          3412,
          5009,
          5862,
          5919,
          5965,
          5910
        ],
        "name": "AccessControlledAggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1732:2:5",
              "statements": []
            },
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "419:916:5",
              "text": "@notice set up the aggregator with initial configuration\n@param _link The address of the LINK token\n@param _paymentAmount The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)\n@param _timeout is the number of seconds after the previous round that are\nallowed to lapse before allowing an oracle to skip an unfinished round\n@param _validator is an optional contract address for validating\nexternal validation of answers\n@param _minSubmissionValue is an immutable check for a lower bound of what\nsubmission values are accepted from an oracle\n@param _maxSubmissionValue is an immutable check for an upper bound of what\nsubmission values are accepted from an oracle\n@param _decimals represents the number of decimals to offset the answer by\n@param _description a short description of what is being reported"
            },
            "id": 88,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "1590:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 78,
                    "name": "_paymentAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "1601:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 79,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64,
                    "src": "1621:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 80,
                    "name": "_validator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1635:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 81,
                    "name": "_minSubmissionValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68,
                    "src": "1651:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 82,
                    "name": "_maxSubmissionValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "1676:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 83,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "1701:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 84,
                    "name": "_description",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "1716:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 85,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "FluxAggregator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3412,
                  "src": "1570:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FluxAggregator_$3412_$",
                    "typeString": "type(contract FluxAggregator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1570:162:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_link",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1355:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_paymentAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1374:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1402:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_validator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1423:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "_minSubmissionValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1447:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_maxSubmissionValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1479:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1511:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1532:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1349:213:5"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:5"
            },
            "scope": 212,
            "src": "1338:396:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1826
            ],
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "3063:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "3095:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3076:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1826,
                      "src": "3076:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function (uint80) view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 111,
                  "nodeType": "Return",
                  "src": "3069:35:5"
                }
              ]
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "1738:1088:5",
              "text": "@notice get data about a round. Consumers are encouraged to check\nthat they're receiving fresh data by inspecting the updatedAt and\nansweredInRound return values.\n@param _roundId the round ID to retrieve the round data for\n@return roundId is the round ID for which data was retrieved\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started. This is 0\nif the round hasn't been started yet.\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed. answeredInRound may be smaller than roundId when the round\ntimed out. answerInRound is equal to roundId when the round didn't time out\nand was completed regularly.\n@dev overridden funcion to add the checkAccess() modifier\n@dev Note that for in-progress rounds (i.e. rounds that haven't yet\nreceived maxSubmissions) answer and updatedAt may change between queries."
            },
            "functionSelector": "9a6fc8f5",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 95,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 94,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "2905:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2905:13:5"
              }
            ],
            "name": "getRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 93,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2892:8:5"
            },
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2851:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2850:17:5"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2939:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2961:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2982:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "3007:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "3032:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "3032:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:129:5"
            },
            "scope": 212,
            "src": "2829:280:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1846
            ],
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "4622:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4635:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1846,
                      "src": "4635:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4635:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "4628:30:5"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "3113:1284:5",
              "text": "@notice get data about the latest round. Consumers are encouraged to check\nthat they're receiving fresh data by inspecting the updatedAt and\nansweredInRound return values. Consumers are encouraged to\nuse this more fully featured method over the \"legacy\" latestAnswer\nfunctions. Consumers are encouraged to check that they're receiving fresh\ndata by inspecting the updatedAt and answeredInRound return values.\n@return roundId is the round ID for which data was retrieved\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started. This is 0\nif the round hasn't been started yet.\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed. answeredInRound may be smaller than roundId when the round\ntimed out. answerInRound is equal to roundId when the round didn't time out\nand was completed regularly.\n@dev overridden funcion to add the checkAccess() modifier\n@dev Note that for in-progress rounds (i.e. rounds that haven't yet\nreceived maxSubmissions) answer and updatedAt may change between queries."
            },
            "functionSelector": "feaf968c",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "4464:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4464:13:5"
              }
            ],
            "name": "latestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4451:8:5"
            },
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4424:2:5"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4498:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4520:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4541:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4566:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4591:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4490:129:5"
            },
            "scope": 212,
            "src": "4400:263:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1703
            ],
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "5190:38:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5203:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1703,
                      "src": "5203:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5203:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "5196:27:5"
                }
              ]
            },
            "documentation": {
              "id": 136,
              "nodeType": "StructuredDocumentation",
              "src": "4667:422:5",
              "text": "@notice get the most recently reported answer\n@dev overridden funcion to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "50d25bcd",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 140,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 139,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "5153:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5153:13:5"
              }
            ],
            "name": "latestAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5140:8:5"
            },
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5113:2:5"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "5180:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5179:8:5"
            },
            "scope": 212,
            "src": "5092:136:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1726
            ],
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "5757:37:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5770:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1726,
                      "src": "5770:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5770:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "5763:26:5"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "5232:424:5",
              "text": "@notice get the most recently reported round ID\n@dev overridden funcion to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "668a0f02",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 153,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "5719:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5719:13:5"
              }
            ],
            "name": "latestRound",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 152,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5706:8:5"
            },
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5679:2:5"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "5746:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5746:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5745:9:5"
            },
            "scope": 212,
            "src": "5659:135:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1716
            ],
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "6328:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6341:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1716,
                      "src": "6341:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 171,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "6334:30:5"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "5798:425:5",
              "text": "@notice get the most recent updated at timestamp\n@dev overridden funcion to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "8205bf6a",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 168,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 167,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "6290:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6290:13:5"
              }
            ],
            "name": "latestTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 166,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6277:8:5"
            },
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6250:2:5"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "6317:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6316:9:5"
            },
            "scope": 212,
            "src": "6226:143:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1751
            ],
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "6954:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "6983:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6967:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1751,
                      "src": "6967:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (uint256) view returns (int256)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6967:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "6960:32:5"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "6373:467:5",
              "text": "@notice get past rounds answers\n@dev overridden funcion to add the checkAccess() modifier\n@param _roundId the round number to retrieve the answer for\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended getRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "b5ab58dc",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 183,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "6917:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6917:13:5"
              }
            ],
            "name": "getAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6904:8:5"
            },
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "6862:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6861:18:5"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "6944:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6944:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6943:8:5"
            },
            "scope": 212,
            "src": "6843:154:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1776
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "7619:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "7651:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7632:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1776,
                      "src": "7632:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7632:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 204,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "7625:35:5"
                }
              ]
            },
            "documentation": {
              "id": 195,
              "nodeType": "StructuredDocumentation",
              "src": "7001:500:5",
              "text": "@notice get timestamp when an answer was last updated\n@dev overridden funcion to add the checkAccess() modifier\n@param _roundId the round number to retrieve the updated timestamp for\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended getRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "b633620c",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 201,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 200,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "7581:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7581:13:5"
              }
            ],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7568:8:5"
            },
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 211,
                  "src": "7526:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7526:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7525:18:5"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 211,
                  "src": "7608:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7608:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7607:9:5"
            },
            "scope": 212,
            "src": "7504:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 213,
        "src": "332:7336:5"
      }
    ],
    "src": "32:7637:5"
  },
  "legacyAST": {
    "absolutePath": "@chainlink/contracts/src/v0.6/AccessControlledAggregator.sol",
    "exportedSymbols": {
      "AccessControlledAggregator": [
        212
      ]
    },
    "id": 213,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 50,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:5"
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.6/FluxAggregator.sol",
        "file": "./FluxAggregator.sol",
        "id": 51,
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 3413,
        "src": "56:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.6/SimpleReadAccessController.sol",
        "file": "./SimpleReadAccessController.sol",
        "id": 52,
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 5697,
        "src": "87:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 54,
              "name": "FluxAggregator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3412,
              "src": "371:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FluxAggregator_$3412",
                "typeString": "contract FluxAggregator"
              }
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "371:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 56,
              "name": "SimpleReadAccessController",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5696,
              "src": "387:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleReadAccessController_$5696",
                "typeString": "contract SimpleReadAccessController"
              }
            },
            "id": 57,
            "nodeType": "InheritanceSpecifier",
            "src": "387:26:5"
          }
        ],
        "contractDependencies": [
          3412,
          5009,
          5696,
          5850,
          5862,
          5910,
          5919,
          5965
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 53,
          "nodeType": "StructuredDocumentation",
          "src": "131:200:5",
          "text": "@title AccessControlled FluxAggregator contract\n@notice This contract requires addresses to be added to a controller\nin order to read the answers stored in the FluxAggregator contract"
        },
        "fullyImplemented": true,
        "id": 212,
        "linearizedBaseContracts": [
          212,
          5696,
          5850,
          3412,
          5009,
          5862,
          5919,
          5965,
          5910
        ],
        "name": "AccessControlledAggregator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1732:2:5",
              "statements": []
            },
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "419:916:5",
              "text": "@notice set up the aggregator with initial configuration\n@param _link The address of the LINK token\n@param _paymentAmount The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)\n@param _timeout is the number of seconds after the previous round that are\nallowed to lapse before allowing an oracle to skip an unfinished round\n@param _validator is an optional contract address for validating\nexternal validation of answers\n@param _minSubmissionValue is an immutable check for a lower bound of what\nsubmission values are accepted from an oracle\n@param _maxSubmissionValue is an immutable check for an upper bound of what\nsubmission values are accepted from an oracle\n@param _decimals represents the number of decimals to offset the answer by\n@param _description a short description of what is being reported"
            },
            "id": 88,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "1590:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 78,
                    "name": "_paymentAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62,
                    "src": "1601:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 79,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64,
                    "src": "1621:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 80,
                    "name": "_validator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1635:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 81,
                    "name": "_minSubmissionValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68,
                    "src": "1651:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 82,
                    "name": "_maxSubmissionValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "1676:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 83,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "1701:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 84,
                    "name": "_description",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74,
                    "src": "1716:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 85,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "FluxAggregator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3412,
                  "src": "1570:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FluxAggregator_$3412_$",
                    "typeString": "type(contract FluxAggregator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1570:162:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_link",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1355:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "_paymentAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1374:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1402:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_validator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1423:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "_minSubmissionValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1447:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_maxSubmissionValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1479:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1511:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 88,
                  "src": "1532:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1349:213:5"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:5"
            },
            "scope": 212,
            "src": "1338:396:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1826
            ],
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "3063:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "3095:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3076:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1826,
                      "src": "3076:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function (uint80) view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 111,
                  "nodeType": "Return",
                  "src": "3069:35:5"
                }
              ]
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "1738:1088:5",
              "text": "@notice get data about a round. Consumers are encouraged to check\nthat they're receiving fresh data by inspecting the updatedAt and\nansweredInRound return values.\n@param _roundId the round ID to retrieve the round data for\n@return roundId is the round ID for which data was retrieved\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started. This is 0\nif the round hasn't been started yet.\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed. answeredInRound may be smaller than roundId when the round\ntimed out. answerInRound is equal to roundId when the round didn't time out\nand was completed regularly.\n@dev overridden funcion to add the checkAccess() modifier\n@dev Note that for in-progress rounds (i.e. rounds that haven't yet\nreceived maxSubmissions) answer and updatedAt may change between queries."
            },
            "functionSelector": "9a6fc8f5",
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 95,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 94,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "2905:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2905:13:5"
              }
            ],
            "name": "getRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 93,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2892:8:5"
            },
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2851:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2850:17:5"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2939:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2961:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "2982:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "3007:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3007:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 113,
                  "src": "3032:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "3032:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:129:5"
            },
            "scope": 212,
            "src": "2829:280:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1846
            ],
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "4622:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4635:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1846,
                      "src": "4635:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4635:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "4628:30:5"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "3113:1284:5",
              "text": "@notice get data about the latest round. Consumers are encouraged to check\nthat they're receiving fresh data by inspecting the updatedAt and\nansweredInRound return values. Consumers are encouraged to\nuse this more fully featured method over the \"legacy\" latestAnswer\nfunctions. Consumers are encouraged to check that they're receiving fresh\ndata by inspecting the updatedAt and answeredInRound return values.\n@return roundId is the round ID for which data was retrieved\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started. This is 0\nif the round hasn't been started yet.\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed. answeredInRound may be smaller than roundId when the round\ntimed out. answerInRound is equal to roundId when the round didn't time out\nand was completed regularly.\n@dev overridden funcion to add the checkAccess() modifier\n@dev Note that for in-progress rounds (i.e. rounds that haven't yet\nreceived maxSubmissions) answer and updatedAt may change between queries."
            },
            "functionSelector": "feaf968c",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "4464:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4464:13:5"
              }
            ],
            "name": "latestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4451:8:5"
            },
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4424:2:5"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4498:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4520:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4520:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4541:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4566:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 135,
                  "src": "4591:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4490:129:5"
            },
            "scope": 212,
            "src": "4400:263:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1703
            ],
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "5190:38:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5203:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1703,
                      "src": "5203:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5203:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "5196:27:5"
                }
              ]
            },
            "documentation": {
              "id": 136,
              "nodeType": "StructuredDocumentation",
              "src": "4667:422:5",
              "text": "@notice get the most recently reported answer\n@dev overridden funcion to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "50d25bcd",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 140,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 139,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "5153:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5153:13:5"
              }
            ],
            "name": "latestAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5140:8:5"
            },
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5113:2:5"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 149,
                  "src": "5180:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5179:8:5"
            },
            "scope": 212,
            "src": "5092:136:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1726
            ],
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "5757:37:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 158,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5770:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1726,
                      "src": "5770:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5770:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "5763:26:5"
                }
              ]
            },
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "5232:424:5",
              "text": "@notice get the most recently reported round ID\n@dev overridden funcion to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "668a0f02",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 153,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "5719:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5719:13:5"
              }
            ],
            "name": "latestRound",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 152,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5706:8:5"
            },
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5679:2:5"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "5746:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5746:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5745:9:5"
            },
            "scope": 212,
            "src": "5659:135:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1716
            ],
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "6328:41:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6341:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1716,
                      "src": "6341:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 171,
                  "id": 175,
                  "nodeType": "Return",
                  "src": "6334:30:5"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "5798:425:5",
              "text": "@notice get the most recent updated at timestamp\n@dev overridden funcion to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "8205bf6a",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 168,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 167,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "6290:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6290:13:5"
              }
            ],
            "name": "latestTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 166,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6277:8:5"
            },
            "parameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6250:2:5"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 177,
                  "src": "6317:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6316:9:5"
            },
            "scope": 212,
            "src": "6226:143:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1751
            ],
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "6954:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "6983:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6967:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1751,
                      "src": "6967:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (uint256) view returns (int256)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6967:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "6960:32:5"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "6373:467:5",
              "text": "@notice get past rounds answers\n@dev overridden funcion to add the checkAccess() modifier\n@param _roundId the round number to retrieve the answer for\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended getRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "b5ab58dc",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 184,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 183,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "6917:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6917:13:5"
              }
            ],
            "name": "getAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6904:8:5"
            },
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "6862:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6862:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6861:18:5"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 194,
                  "src": "6944:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6944:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6943:8:5"
            },
            "scope": 212,
            "src": "6843:154:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1776
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "7619:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 207,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "7651:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7632:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AccessControlledAggregator_$212",
                          "typeString": "contract super AccessControlledAggregator"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1776,
                      "src": "7632:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7632:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 204,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "7625:35:5"
                }
              ]
            },
            "documentation": {
              "id": 195,
              "nodeType": "StructuredDocumentation",
              "src": "7001:500:5",
              "text": "@notice get timestamp when an answer was last updated\n@dev overridden funcion to add the checkAccess() modifier\n@param _roundId the round number to retrieve the updated timestamp for\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended getRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "b633620c",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 201,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 200,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5849,
                  "src": "7581:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7581:13:5"
              }
            ],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 199,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7568:8:5"
            },
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 211,
                  "src": "7526:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7526:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7525:18:5"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 211,
                  "src": "7608:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7608:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7607:9:5"
            },
            "scope": 212,
            "src": "7504:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 213,
        "src": "332:7336:5"
      }
    ],
    "src": "32:7637:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "2": {
      "events": {
        "0x87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "AddedAccess",
          "type": "event"
        },
        "0x0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "int256",
              "name": "current",
              "type": "int256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "name": "AnswerUpdated",
          "type": "event"
        },
        "0xfe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "AvailableFundsUpdated",
          "type": "event"
        },
        "0x3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f539638": {
          "anonymous": false,
          "inputs": [],
          "name": "CheckAccessDisabled",
          "type": "event"
        },
        "0xaebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c3480": {
          "anonymous": false,
          "inputs": [],
          "name": "CheckAccessEnabled",
          "type": "event"
        },
        "0x0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "startedBy",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            }
          ],
          "name": "NewRound",
          "type": "event"
        },
        "0xb79bf2e89c2d70dde91d2991fb1ea69b7e478061ad7c04ed5b02b96bc52b8104": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "OracleAdminUpdateRequested",
          "type": "event"
        },
        "0x0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe904": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "OracleAdminUpdated",
          "type": "event"
        },
        "0x18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool"
            }
          ],
          "name": "OraclePermissionsUpdated",
          "type": "event"
        },
        "0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferRequested",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RemovedAccess",
          "type": "event"
        },
        "0xc3df5a754e002718f2e10804b99e6605e7c701d95cec9552c7680ca2b6f2820a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "requester",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "authorized",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "name": "RequesterPermissionsSet",
          "type": "event"
        },
        "0x56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint128",
              "name": "paymentAmount",
              "type": "uint128"
            },
            {
              "indexed": true,
              "internalType": "uint32",
              "name": "minSubmissionCount",
              "type": "uint32"
            },
            {
              "indexed": true,
              "internalType": "uint32",
              "name": "maxSubmissionCount",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "restartDelay",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "timeout",
              "type": "uint32"
            }
          ],
          "name": "RoundDetailsUpdated",
          "type": "event"
        },
        "0x92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "int256",
              "name": "submission",
              "type": "int256"
            },
            {
              "indexed": true,
              "internalType": "uint32",
              "name": "round",
              "type": "uint32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            }
          ],
          "name": "SubmissionReceived",
          "type": "event"
        },
        "0xcfac5dc75b8d9a7e074162f59d9adcd33da59f0fe8dfb21580db298fc0fdad0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previous",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ],
          "name": "ValidatorUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xBc658d259Bc05BCeABc0f9a9616d793EAC4018Ff",
      "transactionHash": "0x5dbad1e8c7f78182d47999a471bd341d297c7e112ca25687e76ba7ced5566854"
    },
    "42": {
      "events": {
        "0x87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "AddedAccess",
          "type": "event"
        },
        "0x0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "int256",
              "name": "current",
              "type": "int256"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            }
          ],
          "name": "AnswerUpdated",
          "type": "event"
        },
        "0xfe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "AvailableFundsUpdated",
          "type": "event"
        },
        "0x3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f539638": {
          "anonymous": false,
          "inputs": [],
          "name": "CheckAccessDisabled",
          "type": "event"
        },
        "0xaebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c3480": {
          "anonymous": false,
          "inputs": [],
          "name": "CheckAccessEnabled",
          "type": "event"
        },
        "0x0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "roundId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "startedBy",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "startedAt",
              "type": "uint256"
            }
          ],
          "name": "NewRound",
          "type": "event"
        },
        "0xb79bf2e89c2d70dde91d2991fb1ea69b7e478061ad7c04ed5b02b96bc52b8104": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "OracleAdminUpdateRequested",
          "type": "event"
        },
        "0x0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe904": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "name": "OracleAdminUpdated",
          "type": "event"
        },
        "0x18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool"
            }
          ],
          "name": "OraclePermissionsUpdated",
          "type": "event"
        },
        "0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferRequested",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "name": "RemovedAccess",
          "type": "event"
        },
        "0xc3df5a754e002718f2e10804b99e6605e7c701d95cec9552c7680ca2b6f2820a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "requester",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "authorized",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "name": "RequesterPermissionsSet",
          "type": "event"
        },
        "0x56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint128",
              "name": "paymentAmount",
              "type": "uint128"
            },
            {
              "indexed": true,
              "internalType": "uint32",
              "name": "minSubmissionCount",
              "type": "uint32"
            },
            {
              "indexed": true,
              "internalType": "uint32",
              "name": "maxSubmissionCount",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "restartDelay",
              "type": "uint32"
            },
            {
              "indexed": false,
              "internalType": "uint32",
              "name": "timeout",
              "type": "uint32"
            }
          ],
          "name": "RoundDetailsUpdated",
          "type": "event"
        },
        "0x92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "int256",
              "name": "submission",
              "type": "int256"
            },
            {
              "indexed": true,
              "internalType": "uint32",
              "name": "round",
              "type": "uint32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            }
          ],
          "name": "SubmissionReceived",
          "type": "event"
        },
        "0xcfac5dc75b8d9a7e074162f59d9adcd33da59f0fe8dfb21580db298fc0fdad0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previous",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ],
          "name": "ValidatorUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x66d1465e441Cfd4CD9282c917d494D56C7Bd7934",
      "transactionHash": "0xcf845f9fa6bdb38fddfb4da5c32d434d6cdf022516b65606adfe66413e8d3a12"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-02-11T21:51:43.949Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "acceptAdmin(address)": {
        "params": {
          "_oracle": "is the address of the oracle whose admin is being transferred"
        }
      },
      "acceptOwnership()": {
        "details": "Allows an ownership transfer to be completed by the recipient."
      },
      "addAccess(address)": {
        "params": {
          "_user": "The address to add"
        }
      },
      "changeOracles(address[],address[],address[],uint32,uint32,uint32)": {
        "params": {
          "_added": "is the list of addresses for the new Oracles being added",
          "_addedAdmins": "is the admin addresses for the new respective _added list. Only this address is allowed to access the respective oracle's funds",
          "_maxSubmissions": "is the new maximum submission count for each round",
          "_minSubmissions": "is the new minimum submission count for each round",
          "_removed": "is the list of addresses for the new Oracles being removed",
          "_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
        }
      },
      "constructor": {
        "params": {
          "_decimals": "represents the number of decimals to offset the answer by",
          "_description": "a short description of what is being reported",
          "_link": "The address of the LINK token",
          "_maxSubmissionValue": "is an immutable check for an upper bound of what submission values are accepted from an oracle",
          "_minSubmissionValue": "is an immutable check for a lower bound of what submission values are accepted from an oracle",
          "_paymentAmount": "The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)",
          "_timeout": "is the number of seconds after the previous round that are allowed to lapse before allowing an oracle to skip an unfinished round",
          "_validator": "is an optional contract address for validating external validation of answers"
        }
      },
      "getAdmin(address)": {
        "params": {
          "_oracle": "is the address of the oracle whose admin is being queried"
        }
      },
      "getAnswer(uint256)": {
        "details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.",
        "params": {
          "_roundId": "the round number to retrieve the answer for"
        }
      },
      "getRoundData(uint80)": {
        "details": "overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.",
        "params": {
          "_roundId": "the round ID to retrieve the round data for"
        },
        "returns": {
          "answer": "is the answer for the given round",
          "answeredInRound": "is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.",
          "roundId": "is the round ID for which data was retrieved",
          "startedAt": "is the timestamp when the round was started. This is 0 if the round hasn't been started yet.",
          "updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
        }
      },
      "getTimestamp(uint256)": {
        "details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.",
        "params": {
          "_roundId": "the round number to retrieve the updated timestamp for"
        }
      },
      "hasAccess(address,bytes)": {
        "params": {
          "_user": "The address to query"
        }
      },
      "latestAnswer()": {
        "details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
      },
      "latestRound()": {
        "details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
      },
      "latestRoundData()": {
        "details": "overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.",
        "returns": {
          "answer": "is the answer for the given round",
          "answeredInRound": "is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.",
          "roundId": "is the round ID for which data was retrieved",
          "startedAt": "is the timestamp when the round was started. This is 0 if the round hasn't been started yet.",
          "updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
        }
      },
      "latestTimestamp()": {
        "details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "params": {
          "_data": "is mostly ignored. It is checked for length, to be sure nothing strange is passed in."
        }
      },
      "oracleRoundState(address,uint32)": {
        "params": {
          "_oracle": "the address to look up information for."
        }
      },
      "removeAccess(address)": {
        "params": {
          "_user": "The address to remove"
        }
      },
      "setRequesterPermissions(address,bool,uint32)": {
        "params": {
          "_authorized": "is a boolean specifying whether they can start new rounds or not",
          "_delay": "is the number of rounds the requester must wait before starting another round",
          "_requester": "is the address to set permissions for"
        }
      },
      "setValidator(address)": {
        "params": {
          "_newValidator": "designates the address of the new validation contract."
        }
      },
      "submit(uint256,int256)": {
        "params": {
          "_roundId": "is the ID of the round this submission pertains to",
          "_submission": "is the updated data that the oracle is submitting"
        }
      },
      "transferAdmin(address,address)": {
        "params": {
          "_newAdmin": "is the new admin address",
          "_oracle": "is the address of the oracle whose admin is being transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows an owner to begin transferring ownership to a new address, pending."
      },
      "updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": {
        "params": {
          "_maxSubmissions": "is the new maximum submission count for each round",
          "_minSubmissions": "is the new minimum submission count for each round",
          "_paymentAmount": "is the payment amount for subsequent rounds",
          "_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
        }
      },
      "withdrawFunds(address,uint256)": {
        "params": {
          "_amount": "is the amount of LINK to send",
          "_recipient": "is the address to send the LINK to"
        }
      },
      "withdrawPayment(address,address,uint256)": {
        "params": {
          "_amount": "is the amount of LINK to send",
          "_oracle": "is the oracle whose LINK is transferred",
          "_recipient": "is the address to send the LINK to"
        }
      }
    },
    "title": "AccessControlled FluxAggregator contract"
  },
  "userdoc": {
    "methods": {
      "acceptAdmin(address)": {
        "notice": "accept the admin address transfer for an oracle"
      },
      "addAccess(address)": {
        "notice": "Adds an address to the access list"
      },
      "allocatedFunds()": {
        "notice": "the amount of payment yet to be withdrawn by oracles"
      },
      "availableFunds()": {
        "notice": "the amount of future funding available to oracles"
      },
      "changeOracles(address[],address[],address[],uint32,uint32,uint32)": {
        "notice": "called by the owner to remove and add new oracles as well as update the round related parameters that pertain to total oracle count"
      },
      "constructor": "set up the aggregator with initial configuration",
      "disableAccessCheck()": {
        "notice": "makes the access check unenforced"
      },
      "enableAccessCheck()": {
        "notice": "makes the access check enforced"
      },
      "getAdmin(address)": {
        "notice": "get the admin address of an oracle"
      },
      "getAnswer(uint256)": {
        "notice": "get past rounds answers"
      },
      "getOracles()": {
        "notice": "returns an array of addresses containing the oracles on contract"
      },
      "getRoundData(uint80)": {
        "notice": "get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values."
      },
      "getTimestamp(uint256)": {
        "notice": "get timestamp when an answer was last updated"
      },
      "hasAccess(address,bytes)": {
        "notice": "Returns the access of an address"
      },
      "latestAnswer()": {
        "notice": "get the most recently reported answer"
      },
      "latestRound()": {
        "notice": "get the most recently reported round ID"
      },
      "latestRoundData()": {
        "notice": "get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Consumers are encouraged to use this more fully featured method over the \"legacy\" latestAnswer functions. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values."
      },
      "latestTimestamp()": {
        "notice": "get the most recent updated at timestamp"
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "notice": "called through LINK's transferAndCall to update available funds in the same transaction as the funds were transferred to the aggregator"
      },
      "oracleCount()": {
        "notice": "returns the number of oracles"
      },
      "oracleRoundState(address,uint32)": {
        "notice": "a method to provide all current info oracles need. Intended only only to be callable by oracles. Not for use by contracts to read state."
      },
      "removeAccess(address)": {
        "notice": "Removes an address from the access list"
      },
      "requestNewRound()": {
        "notice": "allows non-oracles to request a new round"
      },
      "setRequesterPermissions(address,bool,uint32)": {
        "notice": "allows the owner to specify new non-oracles to start new rounds"
      },
      "setValidator(address)": {
        "notice": "method to update the address which does external data validation."
      },
      "submit(uint256,int256)": {
        "notice": "called by oracles when they have witnessed a need to update"
      },
      "transferAdmin(address,address)": {
        "notice": "transfer the admin address for an oracle"
      },
      "updateAvailableFunds()": {
        "notice": "recalculate the amount of LINK available for payouts"
      },
      "updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": {
        "notice": "update the round and payment related parameters for subsequent rounds"
      },
      "withdrawFunds(address,uint256)": {
        "notice": "transfers the owner's LINK to another address"
      },
      "withdrawPayment(address,address,uint256)": {
        "notice": "transfers the oracle's LINK to another address. Can only be called by the oracle's admin."
      },
      "withdrawablePayment(address)": {
        "notice": "query the available amount of LINK for an oracle to withdraw"
      }
    },
    "notice": "This contract requires addresses to be added to a controller in order to read the answers stored in the FluxAggregator contract"
  }
}